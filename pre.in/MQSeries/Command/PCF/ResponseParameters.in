#-*-perl-*-
#
# (c) 1999-2012 Morgan Stanley & Co. Incorporated
# See ..../src/LICENSE for terms of distribution.
#

package MQSeries::Command::PCF;

%ResponseParameters =
  (
   Error =>
   {
    ErrorId			=> [ &MQIACF_ERROR_ID,			&MQCFT_INTEGER ],
    ErrorOffset			=> [ &MQIACF_ERROR_OFFSET,		&MQCFT_INTEGER ],
    ParameterId			=> [ &MQIACF_PARAMETER_ID,		&MQCFT_INTEGER ],
    Selector			=> [ &MQIACF_SELECTOR,			&MQCFT_INTEGER ],
    CodedCharSetId		=> [ &MQIA_CODED_CHAR_SET_ID,		&MQCFT_INTEGER ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
   },

   QueueManager =>
   {
    AccountingConnOverride	=> [ &MQIA_ACCOUNTING_CONN_OVERRIDE,	&MQCFT_INTEGER,],
    AccountingInterval		=> [ &MQIA_ACCOUNTING_INTERVAL,		&MQCFT_INTEGER ],
    ActivityRecording		=> [ &MQIA_ACTIVITY_RECORDING,		&MQCFT_INTEGER,		$ResponseValues{ActivityRecording} ],
    ActivityConnOverride	=> [ &MQIA_ACTIVITY_CONN_OVERRIDE,	&MQCFT_INTEGER ],
    ActivityTrace		=> [ &MQIA_ACTIVITY_TRACE,		&MQCFT_INTEGER ],

    AdoptNewMCACheck		=> [ &MQIA_ADOPTNEWMCA_CHECK,		&MQCFT_INTEGER,		$ResponseValues{AdoptNewMCACheck} ],
    AdoptNewMCAType		=> [ &MQIA_ADOPTNEWMCA_TYPE,		&MQCFT_INTEGER,		$ResponseValues{AdoptNewMCAType}  ],
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    BridgeEvent			=> [ &MQIA_BRIDGE_EVENT,		&MQCFT_INTEGER ],
    ChlAuthRecords		=> [ &MQIA_CHLAUTH_RECORDS,		&MQCFT_INTEGER ],
    CFConlos			=> [ &MQIA_QMGR_CFCONLOS,		&MQCFT_INTEGER,		$ResponseValues{CFConlos} ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    ChannelAutoDefExit		=> [ &MQCA_CHANNEL_AUTO_DEF_EXIT,	&MQCFT_STRING ],
    ChannelEvent		=> [ &MQIA_CHANNEL_EVENT,		&MQCFT_INTEGER,		$ResponseValues{ChannelEvent} ],
    ChannelInitiatorControl	=> [ &MQIA_CHINIT_CONTROL,		&MQCFT_INTEGER,	$ResponseValues{ChannelInitiatorControl} ],
    ChinitAdapters		=> [ &MQIA_CHINIT_ADAPTERS,		&MQCFT_INTEGER ],
    ChinitDispatchers		=> [ &MQIA_CHINIT_DISPATCHERS,		&MQCFT_INTEGER ],
    ChinitTraceAutoStart	=> [ &MQIA_CHINIT_TRACE_AUTO_START,	&MQCFT_INTEGER ],
    ChinitTraceTableSize	=> [ &MQIA_CHINIT_TRACE_TABLE_SIZE,	&MQCFT_INTEGER ],
    ClusterSenderStatistics	=> [ &MQIA_STATISTICS_AUTO_CLUSSDR,	&MQCFT_INTEGER,		$ResponseValues{ClusterSenderStatistics} ],
    ClusterWorkLoadData		=> [ &MQCA_CLUSTER_WORKLOAD_DATA,	&MQCFT_STRING ],
    ClusterWorkLoadExit		=> [ &MQCA_CLUSTER_WORKLOAD_EXIT,	&MQCFT_STRING ],
    CommandEvent		=> [ &MQIA_COMMAND_EVENT,		&MQCFT_INTEGER,		$ResponseValues{CommandEvent} ],
    CommandInputQName		=> [ &MQCA_COMMAND_INPUT_Q_NAME,	&MQCFT_STRING ],
    CommandServerControl	=> [ &MQIA_CMD_SERVER_CONTROL,		&MQCFT_INTEGER,		$ResponseValues{CommandServerControl} ],
    Custom			=> [ &MQCA_CUSTOM,			&MQCFT_INTEGER ],
    DeadLetterQName		=> [ &MQCA_DEAD_LETTER_Q_NAME,		&MQCFT_STRING ],
    DefXmitQName		=> [ &MQCA_DEF_XMIT_Q_NAME,		&MQCFT_STRING ],
    Platform			=> [ &MQIA_PLATFORM,			&MQCFT_INTEGER,		$ResponseValues{Platform} ],
    QMgrDesc			=> [ &MQCA_Q_MGR_DESC,			&MQCFT_STRING ],
    QMgrIdentifier		=> [ &MQCA_Q_MGR_IDENTIFIER,		&MQCFT_STRING ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    RepositoryName		=> [ &MQCA_REPOSITORY_NAME,		&MQCFT_STRING ],
    RepositoryNamelist		=> [ &MQCA_REPOSITORY_NAMELIST,		&MQCFT_STRING ],
    AuthorityEvent		=> [ &MQIA_AUTHORITY_EVENT,		&MQCFT_INTEGER ],
    ChannelAutoDef		=> [ &MQIA_CHANNEL_AUTO_DEF,		&MQCFT_INTEGER ],
    ChannelAutoDefEvent		=> [ &MQIA_CHANNEL_AUTO_DEF_EVENT,	&MQCFT_INTEGER ],
    ChannelMonitoring		=> [ &MQIA_MONITORING_CHANNEL,		&MQCFT_INTEGER,		$ResponseValues{QMgrChannelMonitoring} ],
    ChannelStatistics		=> [ &MQIA_STATISTICS_CHANNEL,		&MQCFT_INTEGER,		$ResponseValues{QMgrChannelStatistics} ],
    ChinitServiceParm		=> [ &MQCA_CHINIT_SERVICE_PARM,		&MQCFT_STRING ],
    ClusterSenderMonitoringDefault => [ &MQIA_MONITORING_AUTO_CLUSSDR, &MQCFT_INTEGER ,	      $ResponseValues{ClusterSenderMonitoringDefault} ],
    ClusterWorkLoadLength	=> [ &MQIA_CLUSTER_WORKLOAD_LENGTH,	&MQCFT_INTEGER ],
    CLWLMRUChannels		=> [ &MQIA_CLWL_MRU_CHANNELS,		&MQCFT_INTEGER ],
    CLWLUseQ			=> [ &MQIA_CLWL_USEQ,			&MQCFT_INTEGER,		$ResponseValues{QMgrCLWLUseQ} ],
    CodedCharSetId		=> [ &MQIA_CODED_CHAR_SET_ID,		&MQCFT_INTEGER ],
    CommandEvent		=> [ &MQIA_COMMAND_EVENT,		&MQCFT_INTEGER,		       $ResponseValues{CommandEvent} ],
    CommandLevel		=> [ &MQIA_COMMAND_LEVEL,		&MQCFT_INTEGER ],
    ConfigurationEvent		=> [ &MQIA_CONFIGURATION_EVENT,		&MQCFT_INTEGER ],
    CPILevel			=> [ &MQIA_CPI_LEVEL,			&MQCFT_INTEGER ],
    DistLists			=> [ &MQIA_DIST_LISTS,			&MQCFT_INTEGER ],
    DNSGroup			=> [ &MQCA_DNS_GROUP,			&MQCFT_STRING ],
    DNSWLM			=> [ &MQIA_DNS_WLM,			&MQCFT_INTEGER ],
    EncryptionPolicySuiteB	=> [ &MQIA_SUITE_B_STRENGTH,		&MQCFT_INTEGER_LIST,	$ResponseValues{EncryptionPolicySuiteB} ],
    ExpiryInterval		=> [ &MQIA_EXPIRY_INTERVAL,		&MQCFT_INTEGER ],
    GroupUR			=> [ &MQIA_GROUP_UR,			&MQCFT_INTEGER,		$ResponseValues{GroupUR} ],
    IGQPutAuthority		=> [ &MQIA_IGQ_PUT_AUTHORITY,		&MQCFT_INTEGER,		$ResponseValues{IGQPutAuthority} ],
    InhibitEvent		=> [ &MQIA_INHIBIT_EVENT,		&MQCFT_INTEGER ],
    IntraGroupQueueing		=> [ &MQIA_INTRA_GROUP_QUEUING,		&MQCFT_INTEGER ],
    IGQUserId			=> [ &MQCA_IGQ_USER_ID,			&MQCFT_STRING ],
    IPAddressVersion		=> [ &MQIA_IP_ADDRESS_VERSION,		&MQCFT_INTEGER,		$ResponseValues{IPAddressVersion} ],
    ListenerTimer		=> [ &MQIA_LISTENER_TIMER,		&MQCFT_INTEGER ],
    LocalEvent			=> [ &MQIA_LOCAL_EVENT,			&MQCFT_INTEGER ],
    LoggerEvent			=> [ &MQIA_LOGGER_EVENT,		&MQCFT_INTEGER ],
    LU62ARMSuffix		=> [ &MQCA_LU62_ARM_SUFFIX,		&MQCFT_STRING ],
    LU62Channels		=> [ &MQIA_LU62_CHANNELS,		&MQCFT_INTEGER ],
    LUGroupName			=> [ &MQCA_LU_GROUP_NAME,		&MQCFT_STRING ],
    LUName			=> [ &MQCA_LU_NAME,			&MQCFT_STRING ],
    MaxActiveChannels		=> [ &MQIA_ACTIVE_CHANNELS,		&MQCFT_INTEGER ],
    MaxChannels			=> [ &MQIA_MAX_CHANNELS,		&MQCFT_INTEGER ],
    MaxHandles			=> [ &MQIA_MAX_HANDLES,			&MQCFT_INTEGER ],
    MaxMsgLength		=> [ &MQIA_MAX_MSG_LENGTH,		&MQCFT_INTEGER ],
    MaxPriority			=> [ &MQIA_MAX_PRIORITY,		&MQCFT_INTEGER ],
    MaxPropertiesLength		=> [ &MQIA_MAX_PROPERTIES_LENGTH,	&MQCFT_INTEGER,		$ResponseValues{MaxPropertiesLength} ],
    MaxUncommittedMsgs		=> [ &MQIA_MAX_UNCOMMITTED_MSGS,	&MQCFT_INTEGER ],
    MsgMarkBrowseInterval	=> [ &MQIA_MSG_MARK_BROWSE_INTERVAL,	&MQCFT_INTEGER,		$ResponseValues{MsgMarkBrowseInterval} ],
    MQIAccounting		=> [ &MQIA_ACCOUNTING_MQI,		&MQCFT_INTEGER ],
    MQIStatistics		=> [ &MQIA_STATISTICS_MQI,		&MQCFT_INTEGER ],
    OutboundPortMax		=> [ &MQIA_OUTBOUND_PORT_MAX,		&MQCFT_INTEGER ],
    OutboundPortMin		=> [ &MQIA_OUTBOUND_PORT_MIN,		&MQCFT_INTEGER ],
    PerformanceEvent		=> [ &MQIA_PERFORMANCE_EVENT,		&MQCFT_INTEGER ],
    Parent			=> [ &MQCA_PARENT,			&MQCFT_STRING ],
    PubSubClus			=> [ &MQIA_PUBSUB_CLUSTER,		&MQCFT_INTEGER ],
    PubSubMaxMsgRetryCount	=> [ &MQIA_PUBSUB_MAXMSG_RETRY_COUNT,	&MQCFT_INTEGER ],
    PubSubMode			=> [ &MQIA_PUBSUB_MODE,			&MQCFT_INTEGER,		$ResponseValues{PubSubMode} ],
    PubSubNPInputMsg		=> [ &MQIA_PUBSUB_NP_MSG,		&MQCFT_INTEGER,		$ResponseValues{PubSubNPInputMsg} ],
    PubSubNPResponse		=> [ &MQIA_PUBSUB_NP_RESP,		&MQCFT_INTEGER,		$ResponseValues{PubSubNPResponse} ],
    PubSubSyncPoint		=> [ &MQIA_PUBSUB_SYNC_PT,		&MQCFT_INTEGER,		$ResponseValues{PubSubSyncPoint} ],
    QueueAccounting		=> [ &MQIA_ACCOUNTING_Q,		&MQCFT_INTEGER,		$ResponseValues{QMgrAccounting} ],
    QueueMonitoring		=> [ &MQIA_MONITORING_Q,		&MQCFT_INTEGER,		$ResponseValues{QMgrMonitoring} ],
    QueueStatistics		=> [ &MQIA_STATISTICS_Q,		&MQCFT_INTEGER,		$ResponseValues{QMgrQueueStatistics} ],
    QSharingGroupName		=> [ &MQCA_QSG_NAME,			&MQCFT_STRING ],
    ReceiveTimeout		=> [ &MQIA_RECEIVE_TIMEOUT,		&MQCFT_INTEGER ],
    ReceiveTimeoutMin		=> [ &MQIA_RECEIVE_TIMEOUT_MIN,		&MQCFT_INTEGER ],
    ReceiveTimeoutType		=> [ &MQIA_RECEIVE_TIMEOUT_TYPE,	&MQCFT_INTEGER,		$ResponseValues{ReceiveTimeoutType} ],
    RemoteEvent			=> [ &MQIA_REMOTE_EVENT,		&MQCFT_INTEGER ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    SecurityCase		=> [ &MQIA_SECURITY_CASE,		&MQCFT_INTEGER,		$ResponseValues{SecurityCase} ],
    SharedQQMgrName		=> [ &MQIA_SHARED_Q_Q_MGR_NAME,		&MQCFT_INTEGER,		$ResponseValues{SharedQQMgrName} ],
    SSLCRLNamelist		=> [ &MQCA_SSL_CRL_NAMELIST,		&MQCFT_STRING ],
    SSLCryptoHardware		=> [ &MQCA_SSL_CRYPTO_HARDWARE,		&MQCFT_STRING ],
    SSLEvent			=> [ &MQIA_SSL_EVENT,			&MQCFT_INTEGER ], # Boolean
    SSLFipsRequired		=> [ &MQIA_SSL_FIPS_REQUIRED,		&MQCFT_INTEGER ], # Boolean
    SSLKeyRepository		=> [ &MQCA_SSL_KEY_REPOSITORY,		&MQCFT_STRING ],
    SSLKeyResetCount		=> [ &MQIA_SSL_RESET_COUNT,		&MQCFT_INTEGER ],
    SSLTasks			=> [ &MQIA_SSL_TASKS,			&MQCFT_INTEGER ],
    StartStopEvent		=> [ &MQIA_START_STOP_EVENT,		&MQCFT_INTEGER ],
    StatisticsInterval		=> [ &MQIA_STATISTICS_INTERVAL,		&MQCFT_INTEGER ],
    SyncPoint			=> [ &MQIA_SYNCPOINT,			&MQCFT_INTEGER ],
    TCPChannels			=> [ &MQIA_TCP_CHANNELS,		&MQCFT_INTEGER ],
    TCPKeepAlive		=> [ &MQIA_TCP_KEEP_ALIVE,		&MQCFT_INTEGER ],
    TCPName			=> [ &MQCA_TCP_NAME,			&MQCFT_STRING ],
    TCPStackType		=> [ &MQIA_TCP_STACK_TYPE,		&MQCFT_INTEGER,		$ResponseValues{TCPStackType} ],
    TraceRouteRecording		=> [ &MQIA_TRACE_ROUTE_RECORDING,	&MQCFT_INTEGER,		$ResponseValues{TraceRouteRecording} ],
    TreeLifeTime		=> [ &MQIA_TREE_LIFE_TIME,		&MQCFT_INTEGER ],
    TriggerInterval		=> [ &MQIA_TRIGGER_INTERVAL,		&MQCFT_INTEGER ],
    Version			=> [ &MQCA_VERSION,			&MQCFT_STRING ],
    XrCapability			=> [ &MQIA_XR_CAPABILITY,		&MQCFT_INTEGER ],
   },

   QueueManagerStatus =>
   {
    ChannelInitiatorStatus	=> [ &MQIACF_CHINIT_STATUS,		&MQCFT_INTEGER,	$ResponseValues{QMgrServiceStatus}  ],
    CommandServerStatus		=> [ &MQIACF_CMD_SERVER_STATUS,		&MQCFT_INTEGER,	$ResponseValues{QMgrServiceStatus}  ],
    ConnectionCount		=> [ &MQIACF_CONNECTION_COUNT,		&MQCFT_INTEGER ],
    CurrentLog			=> [ &MQCACF_CURRENT_LOG_EXTENT_NAME,	&MQCFT_STRING ],
    InstallationDesc		=> [ &MQCA_INSTALLATION_DESC,		&MQCFT_STRING ],
    InstallationName		=> [ &MQCA_INSTALLATION_NAME,		&MQCFT_STRING ],
    InstallationPath		=> [ &MQCA_INSTALLATION_PATH,		&MQCFT_STRING ],
    LogPath			=> [ &MQCACF_LOG_PATH,			&MQCFT_STRING ],
    MediaRecoveryLog		=> [ &MQCACF_MEDIA_LOG_EXTENT_NAME,	&MQCFT_STRING ],
    PermitStandby		=> [ &MQIACF_PERMIT_STANDBY,		&MQCFT_INTEGER ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    QMgrStatus			=> [ &MQIACF_Q_MGR_STATUS,		&MQCFT_INTEGER,	$ResponseValues{QMgrStatus}  ],
    RestartRecoveryLog		=> [ &MQCACF_RESTART_LOG_EXTENT_NAME,	&MQCFT_STRING ],
    StartDate			=> [ &MQCACF_Q_MGR_START_DATE,		&MQCFT_STRING ],
    StartTime			=> [ &MQCACF_Q_MGR_START_TIME,		&MQCFT_STRING ],
    Version			=> [ &MQCA_VERSION,			&MQCFT_STRING ],
   },

   Queue =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    BackoutRequeueName		=> [ &MQCA_BACKOUT_REQ_Q_NAME,		&MQCFT_STRING ],
    BackoutThreshold		=> [ &MQIA_BACKOUT_THRESHOLD,		&MQCFT_INTEGER ],
    BaseQName			=> [ &MQCA_BASE_Q_NAME,			&MQCFT_STRING ],
    BaseType			=> [ &MQIA_BASE_TYPE,			&MQCFT_INTEGER,		$ResponseValues{BaseType} ],
    CFStructure			=> [ &MQCA_CF_STRUC_NAME,		&MQCFT_STRING ],
    ClusterDate			=> [ &MQCA_CLUSTER_DATE,		&MQCFT_STRING ],
    ClusterName			=> [ &MQCA_CLUSTER_NAME,		&MQCFT_STRING ],
    ClusterNamelist		=> [ &MQCA_CLUSTER_NAMELIST,		&MQCFT_STRING ],
    ClusterQType		=> [ &MQIA_CLUSTER_Q_TYPE,		&MQCFT_INTEGER,		$ResponseValues{ClusterQType} ],
    ClusterTime			=> [ &MQCA_CLUSTER_TIME,		&MQCFT_STRING ],
    CLWLQueuePriority		=> [ &MQIA_CLWL_Q_PRIORITY,		&MQCFT_INTEGER ],
    CLWLQueueRank		=> [ &MQIA_CLWL_Q_RANK,			&MQCFT_INTEGER ],
    CLWLUseQ			=> [ &MQIA_CLWL_USEQ,			&MQCFT_INTEGER,		$ResponseValues{QueueCLWLUseQ} ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    CurrentQDepth		=> [ &MQIA_CURRENT_Q_DEPTH,		&MQCFT_INTEGER ],
    Custom			=> [ &MQCA_CUSTOM,			&MQCFT_STRING ],
    DefBind			=> [ &MQIA_DEF_BIND,			&MQCFT_INTEGER,		$ResponseValues{DefBind} ],
    DefinitionType		=> [ &MQIA_DEFINITION_TYPE,		&MQCFT_INTEGER,		$ResponseValues{DefinitionType} ],
    DefInputOpenOption		=> [ &MQIA_DEF_INPUT_OPEN_OPTION,	&MQCFT_INTEGER,		$ResponseValues{DefInputOpenOption} ],
    DefPersistence		=> [ &MQIA_DEF_PERSISTENCE,		&MQCFT_INTEGER ],
    DefPriority			=> [ &MQIA_DEF_PRIORITY,		&MQCFT_INTEGER ],
    DefPutResponse		=> [ &MQIA_DEF_PUT_RESPONSE_TYPE,	&MQCFT_INTEGER,		$ResponseValues{DefPutResponse} ],
    DefReadAhead		=> [ &MQIA_DEF_READ_AHEAD,		&MQCFT_INTEGER,		$ResponseValues{DefReadAhead} ],
    DistLists			=> [ &MQIA_DIST_LISTS,			&MQCFT_INTEGER ],
    HardenGetBackout		=> [ &MQIA_HARDEN_GET_BACKOUT,		&MQCFT_INTEGER ],
    HighQDepth			=> [ &MQIA_HIGH_Q_DEPTH,		&MQCFT_INTEGER ],
    IndexType			=> [ &MQIA_INDEX_TYPE,			&MQCFT_INTEGER,		$ResponseValues{IndexType} ],
    InhibitGet			=> [ &MQIA_INHIBIT_GET,			&MQCFT_INTEGER ],
    InhibitPut			=> [ &MQIA_INHIBIT_PUT,			&MQCFT_INTEGER ],
    InitiationQName		=> [ &MQCA_INITIATION_Q_NAME,		&MQCFT_STRING ],
    MaxMsgLength		=> [ &MQIA_MAX_MSG_LENGTH,		&MQCFT_INTEGER ],
    MaxQDepth			=> [ &MQIA_MAX_Q_DEPTH,			&MQCFT_INTEGER ],
    MsgDeliverySequence		=> [ &MQIA_MSG_DELIVERY_SEQUENCE,	&MQCFT_INTEGER,		$ResponseValues{MsgDeliverySequence} ],
    MsgDeqCount			=> [ &MQIA_MSG_DEQ_COUNT,		&MQCFT_INTEGER ],
    MsgEnqCount			=> [ &MQIA_MSG_ENQ_COUNT,		&MQCFT_INTEGER ],
    NonPersistentMsgClass	=> [ &MQIA_NPM_CLASS,			&MQCFT_INTEGER,		$ResponseValues{NonPersistentMsgClass} ],
    OpenInputCount		=> [ &MQIA_OPEN_INPUT_COUNT,		&MQCFT_INTEGER ],
    OpenOutputCount		=> [ &MQIA_OPEN_OUTPUT_COUNT,		&MQCFT_INTEGER ],
    PageSetId			=> [ &MQIA_PAGESET_ID,			&MQCFT_INTEGER ],
    ProcessName			=> [ &MQCA_PROCESS_NAME,		&MQCFT_STRING ],
    PropertyControl		=> [ &MQIA_PROPERTY_CONTROL,		&MQCFT_INTEGER,		$ResponseValues{PropertyControl} ],
    QDepthHighEvent		=> [ &MQIA_Q_DEPTH_HIGH_EVENT,		&MQCFT_INTEGER ],
    QDepthHighLimit		=> [ &MQIA_Q_DEPTH_HIGH_LIMIT,		&MQCFT_INTEGER ],
    QDepthLowEvent		=> [ &MQIA_Q_DEPTH_LOW_EVENT,		&MQCFT_INTEGER ],
    QDepthLowLimit		=> [ &MQIA_Q_DEPTH_LOW_LIMIT,		&MQCFT_INTEGER ],
    QDepthMaxEvent		=> [ &MQIA_Q_DEPTH_MAX_EVENT,		&MQCFT_INTEGER ],
    QDesc			=> [ &MQCA_Q_DESC,			&MQCFT_STRING ],
    QMgrIdentifier		=> [ &MQCA_Q_MGR_IDENTIFIER,		&MQCFT_STRING ],
    QMgrName			=> [ &MQCA_CLUSTER_Q_MGR_NAME,		&MQCFT_STRING ],
    QName			=> [ &MQCA_Q_NAME,			&MQCFT_STRING ],
    QNames			=> [ &MQCACF_Q_NAMES,			&MQCFT_STRING_LIST ],
    QServiceInterval		=> [ &MQIA_Q_SERVICE_INTERVAL,		&MQCFT_INTEGER ],
    QServiceIntervalEvent	=> [ &MQIA_Q_SERVICE_INTERVAL_EVENT,	&MQCFT_INTEGER,		$ResponseValues{QServiceIntervalEvent} ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QSGDispositions		=> [ &MQIACF_QSG_DISPS,			&MQCFT_INTEGER_LIST,	$ResponseValues{QSGDisposition} ],
    QType			=> [ &MQIA_Q_TYPE,			&MQCFT_INTEGER,		$ResponseValues{QType} ],
    QTypes			=> [ &MQIACF_Q_TYPES,			&MQCFT_INTEGER_LIST,	$ResponseValues{QType} ],
    QueueAccounting		=> [ &MQIA_ACCOUNTING_Q,		&MQCFT_INTEGER,		$ResponseValues{QueueAccounting} ],
    QueueMonitoring		=> [ &MQIA_MONITORING_Q,		&MQCFT_INTEGER,		$ResponseValues{QueueMonitoring} ],
    QueueStatistics		=> [ &MQIA_STATISTICS_Q,		&MQCFT_INTEGER,		$ResponseValues{QueueStatistics} ],
    RemoteQMgrName		=> [ &MQCA_REMOTE_Q_MGR_NAME,		&MQCFT_STRING ],
    RemoteQName			=> [ &MQCA_REMOTE_Q_NAME,		&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    RetentionInterval		=> [ &MQIA_RETENTION_INTERVAL,		&MQCFT_INTEGER ],
    Scope			=> [ &MQIA_SCOPE,			&MQCFT_INTEGER,		$ResponseValues{Scope} ],
    Shareability		=> [ &MQIA_SHAREABILITY,		&MQCFT_INTEGER ],
    StorageClass		=> [ &MQCA_STORAGE_CLASS,		&MQCFT_STRING ],
    TimeSinceReset		=> [ &MQIA_TIME_SINCE_RESET,		&MQCFT_INTEGER ],
    TPipeNames			=> [ &MQCA_TPIPE_NAME,			&MQCFT_STRING ],
    TriggerControl		=> [ &MQIA_TRIGGER_CONTROL,		&MQCFT_INTEGER ],
    TriggerData			=> [ &MQCA_TRIGGER_DATA,		&MQCFT_STRING ],
    TriggerDepth		=> [ &MQIA_TRIGGER_DEPTH,		&MQCFT_INTEGER ],
    TriggerMsgPriority		=> [ &MQIA_TRIGGER_MSG_PRIORITY,	&MQCFT_INTEGER ],
    TriggerType			=> [ &MQIA_TRIGGER_TYPE,		&MQCFT_INTEGER,		$ResponseValues{TriggerType} ],
    Usage			=> [ &MQIA_USAGE,			&MQCFT_INTEGER,		$ResponseValues{Usage} ],
    XmitQName			=> [ &MQCA_XMIT_Q_NAME,			&MQCFT_STRING ],
   },

   QSharingGroup =>
   {
    CommandLevel		=> [ &MQIA_COMMAND_LEVEL,		&MQCFT_INTEGER ],
    DB2ConnectStatus		=> [ &MQIACF_DB2_CONN_STATUS,		&MQCFT_INTEGER,		$ResponseValues{QSGStatus} ],
    DB2Name			=> [ &MQCACF_DB2_NAME,			&MQCFT_STRING ],
    QMgrCPF			=> [ &MQCACF_Q_MGR_CPF,			&MQCFT_STRING ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    QMgrNumber			=> [ &MQIACF_Q_MGR_NUMBER,		&MQCFT_INTEGER ],
    QMgrStatus			=> [ &MQIACF_Q_MGR_STATUS,		&MQCFT_INTEGER,		$ResponseValues{QSGStatus} ],
    QSGName			=> [ &MQCA_QSG_NAME,			&MQCFT_STRING ],
    CFMsgIdentifier		=> [ &MQBACF_CF_LEID,			&MQCFT_STRING ],
    CommandInformation		=> [ &MQIACF_COMMAND_INFO,		&MQCFT_INTEGER,		$ResponseValues{CommandInformation} ],
   },

   Process =>
   {
    ApplType			=> [ &MQIA_APPL_TYPE,			&MQCFT_INTEGER,		$ResponseValues{ApplType} ],

    ProcessNames		=> [ &MQCACF_PROCESS_NAMES,		&MQCFT_STRING_LIST ],
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    ApplId			=> [ &MQCA_APPL_ID,			&MQCFT_STRING ],
    EnvData			=> [ &MQCA_ENV_DATA,			&MQCFT_STRING ],
    ProcessDesc			=> [ &MQCA_PROCESS_DESC,		&MQCFT_STRING ],
    ProcessName			=> [ &MQCA_PROCESS_NAME,		&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QSGDispositions		=> [ &MQIACF_QSG_DISPS,			&MQCFT_INTEGER_LIST,	$ResponseValues{QSGDisposition} ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    UserData			=> [ &MQCA_USER_DATA,			&MQCFT_STRING ],
   },

   Channel =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    BatchDataLimit		=> [ &MQIACH_BATCH_DATA_LIMIT,		&MQCFT_INTEGER ],
    BatchHeartBeat		=> [ &MQIACH_BATCH_HB,			&MQCFT_INTEGER ],
    BatchInterval		=> [ &MQIACH_BATCH_INTERVAL,		&MQCFT_INTEGER ],
    BatchSize			=> [ &MQIACH_BATCH_SIZE,		&MQCFT_INTEGER ],
    ChannelDesc			=> [ &MQCACH_DESC,			&MQCFT_STRING ],
    ChannelDisposition		=> [ &MQIACH_CHANNEL_DISP,		&MQCFT_INTEGER,		$ResponseValues{ChannelDisposition} ],
    ChannelMonitoring		=> [ &MQIA_MONITORING_CHANNEL,		&MQCFT_INTEGER,		$ResponseValues{ChannelMonitoring} ],
    ChannelStatistics		=> [ &MQIA_STATISTICS_CHANNEL,		&MQCFT_INTEGER,		$ResponseValues{ChannelStatistics} ],
    ChannelName			=> [ &MQCACH_CHANNEL_NAME,		&MQCFT_STRING ],
    ChannelNames		=> [ &MQCACH_CHANNEL_NAMES,		&MQCFT_STRING_LIST ],
    ChannelType			=> [ &MQIACH_CHANNEL_TYPE,		&MQCFT_INTEGER,		$ResponseValues{ChannelType} ],
    ChannelTypes		=> [ &MQIACH_CHANNEL_TYPES,		&MQCFT_INTEGER_LIST,		$ResponseValues{ChannelType} ],
    ClientChannelWeight		=> [ &MQIACH_CLIENT_CHANNEL_WEIGHT,	&MQCFT_INTEGER ],
    ClusterName			=> [ &MQCA_CLUSTER_NAME,		&MQCFT_STRING ],
    ClusterNamelist		=> [ &MQCA_CLUSTER_NAMELIST,		&MQCFT_STRING ],
    CLWLChannelPriority		=> [ &MQIACH_CLWL_CHANNEL_PRIORITY,	&MQCFT_INTEGER ],
    CLWLChannelRank		=> [ &MQIACH_CLWL_CHANNEL_RANK,		&MQCFT_INTEGER ],
    CLWLChannelWeight		=> [ &MQIACH_CLWL_CHANNEL_WEIGHT,	&MQCFT_INTEGER ],
    ConnectionAffinity		=> [ &MQIACH_CONNECTION_AFFINITY,	&MQCFT_INTEGER,		$ResponseValues{ConnectionAffinity} ],
    ConnectionName		=> [ &MQCACH_CONNECTION_NAME,		&MQCFT_STRING ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    DataConversion		=> [ &MQIACH_DATA_CONVERSION,		&MQCFT_INTEGER ],
    DefReconnect		=> [ &MQIACH_DEF_RECONNECT,		&MQCFT_INTEGER,		$ResponseValues{DefReconnect} ],
    DefaultChannelDisposition	=> [ &MQIACH_DEF_CHANNEL_DISP,		&MQCFT_INTEGER,		$ResponseValues{ChannelDisposition} ],
    DiscInterval		=> [ &MQIACH_DISC_INTERVAL,		&MQCFT_INTEGER ],
    HeaderCompression		=> [ &MQIACH_HDR_COMPRESSION,		&MQCFT_INTEGER_LIST,	$ResponseValues{HeaderCompression} ],
    HeartbeatInterval		=> [ &MQIACH_HB_INTERVAL,		&MQCFT_INTEGER ],
    KeepAliveInterval		=> [ &MQIACH_KEEP_ALIVE_INTERVAL,	&MQCFT_INTEGER,		$ResponseValues{KeepAliveInterval} ],
    LocalAddress		=> [ &MQCACH_LOCAL_ADDRESS,		&MQCFT_STRING ],
    LongRetryCount		=> [ &MQIACH_LONG_RETRY,		&MQCFT_INTEGER ],
    LongRetryInterval		=> [ &MQIACH_LONG_TIMER,		&MQCFT_INTEGER ],
    MCAName			=> [ &MQCACH_MCA_NAME,			&MQCFT_STRING ],
    MCAType			=> [ &MQIACH_MCA_TYPE,			&MQCFT_INTEGER,		$ResponseValues{MCAType} ],
    MCAUserIdentifier		=> [ &MQCACH_MCA_USER_ID,		&MQCFT_STRING ],
    MaxInstances		=> [ &MQIACH_MAX_INSTANCES,		&MQCFT_INTEGER ],
    MaxInstancesPerClient	=> [ &MQIACH_MAX_INSTS_PER_CLIENT,	&MQCFT_INTEGER ],
    MaxMsgLength		=> [ &MQIACH_MAX_MSG_LENGTH,		&MQCFT_INTEGER ],
    ModeName			=> [ &MQCACH_MODE_NAME,			&MQCFT_STRING ],
    MessageCompression		=> [ &MQIACH_MSG_COMPRESSION,		&MQCFT_INTEGER_LIST,		$ResponseValues{MessageCompression} ],
    MsgExit			=> [ &MQCACH_MSG_EXIT_NAME,		&MQCFT_STRING ],
    MsgRetryCount		=> [ &MQIACH_MR_COUNT,			&MQCFT_INTEGER ],
    MsgRetryExit		=> [ &MQCACH_MR_EXIT_NAME,		&MQCFT_STRING ],
    MsgRetryInterval		=> [ &MQIACH_MR_INTERVAL,		&MQCFT_INTEGER ],
    MsgRetryUserData		=> [ &MQCACH_MR_EXIT_USER_DATA,		&MQCFT_STRING ],
    MsgUserData			=> [ &MQCACH_MSG_EXIT_USER_DATA,	&MQCFT_STRING ],
    NetworkPriority		=> [ &MQIACH_NETWORK_PRIORITY,		&MQCFT_INTEGER ],
    NonPersistentMsgSpeed	=> [ &MQIACH_NPM_SPEED,			&MQCFT_INTEGER,		$ResponseValues{NonPersistentMsgSpeed} ],
    Password			=> [ &MQCACH_PASSWORD,			&MQCFT_STRING ],
    PropertyControl		=> [ &MQIA_PROPERTY_CONTROL,		&MQCFT_INTEGER,		$ResponseValues{PropertyControl} ],
    PutAuthority		=> [ &MQIACH_PUT_AUTHORITY,		&MQCFT_INTEGER,		$ResponseValues{PutAuthority} ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QSGDispositions		=> [ &MQIACF_QSG_DISPS,			&MQCFT_INTEGER_LIST,		$ResponseValues{QSGDisposition} ],
    ReceiveExit			=> [ &MQCACH_RCV_EXIT_NAME,		&MQCFT_STRING ],
    ReceiveUserData		=> [ &MQCACH_RCV_EXIT_USER_DATA,	&MQCFT_STRING ],
    ResetRequested		=> [ &MQIACH_RESET_REQUESTED,		&MQCFT_INTEGER ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    SecurityExit		=> [ &MQCACH_SEC_EXIT_NAME,		&MQCFT_STRING ],
    SecurityUserData		=> [ &MQCACH_SEC_EXIT_USER_DATA,	&MQCFT_STRING ],
    SendExit			=> [ &MQCACH_SEND_EXIT_NAME,		&MQCFT_STRING ],
    SendUserData		=> [ &MQCACH_SEND_EXIT_USER_DATA,	&MQCFT_STRING ],
    SeqNumberWrap		=> [ &MQIACH_SEQUENCE_NUMBER_WRAP,	&MQCFT_INTEGER ],
    SharingConversations	=> [ &MQIACH_SHARING_CONVERSATIONS,	&MQCFT_INTEGER ],
    ShortRetryCount		=> [ &MQIACH_SHORT_RETRY,		&MQCFT_INTEGER ],
    ShortRetryInterval		=> [ &MQIACH_SHORT_TIMER,		&MQCFT_INTEGER ],
    SSLCipherSpec		=> [ &MQCACH_SSL_CIPHER_SPEC,		&MQCFT_STRING ],
    SSLClientAuth		=> [ &MQIACH_SSL_CLIENT_AUTH,		&MQCFT_INTEGER,		$ResponseValues{SSLClientAuth} ],
    SSLPeerName			=> [ &MQCACH_SSL_PEER_NAME,		&MQCFT_STRING ],
    TpName			=> [ &MQCACH_TP_NAME,			&MQCFT_STRING ],
    TransportType		=> [ &MQIACH_XMIT_PROTOCOL_TYPE,	&MQCFT_INTEGER,		$ResponseValues{TransportType} ],
    UserIdentifier		=> [ &MQCACH_USER_ID,			&MQCFT_STRING ],
    XmitQName			=> [ &MQCACH_XMIT_Q_NAME,		&MQCFT_STRING ],
    UseDLQ			=> [ &MQIA_USE_DEAD_LETTER_Q,		&MQCFT_INTEGER,		$ResponseValues{UseDLQ} ],
   },

   #
   # MQ 7.1 introducted ChannelAuthRecords
   #

   ChlAuthRec =>
   {
    Action                      => [ &MQIACF_ACTION,                    &MQCFT_INTEGER,            $ResponseVaues{ChlAuthAction} ],
    Address			=> [ &MQCACH_CONNECTION_NAME,		&MQCFT_STRING ],
    Addrlist			=> [ &MQCACH_CONNECTION_NAME_LIST,	&MQCFT_STRING_LIST ],
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    ChlAuth			=> [ &MQCACH_CHANNEL_NAME,		&MQCFT_STRING ],
    ChlAuthDesc                 => [ &MQCA_CHLAUTH_DESC,                &MQCFT_STRING, ],
    ClientUserId		=> [ &MQCACH_CLIENT_USER_ID,		&MQCFT_STRING ],
    Custom                      => [ &MQCA_CUSTOM,                      &MQCFT_STRING ],
    MCAUserIdentifier		=> [ &MQCACH_MCA_USER_ID,		&MQCFT_STRING ],
    RemoteQMgrName		=> [ &MQCA_REMOTE_Q_MGR_NAME,		&MQCFT_STRING ],
    SSLPeerName			=> [ &MQCACH_SSL_PEER_NAME,		&MQCFT_STRING ],
    ChlAuthType			=> [ &MQIACF_CHLAUTH_TYPE,		&MQCFT_INTEGER,		$ResponseValues{ChlAuthType} ],
    MCAUserIdList		=> [ &MQCACH_MCA_USER_ID_LIST,		&MQCFT_STRING_LIST ],
    UserSource			=> [ &MQIACH_USER_SOURCE,		&MQCFT_INTEGER,		$ResponseValues{UserSource} ],
    Warning			=> [ &MQIACH_WARNING,			&MQCFT_INTEGER ],
   },
    #ChlAuthAttrs                => [ &MQIACF_CHLAUTH_ATTRS,             &MQCFT_INTEGER_LIST,            $RequestValues{ChlAuthAttrs} ],
    #CommandScope                => [ &MQCACF_COMMAND_SCOPE,             &MQCFT_STRING ],
    #Match                       => [ &MQIACH_MATCH,                     &MQCFT_INTEGER,         $RequestValues{ChlAuthMatch} ],


   #
   # ChannelInitiator is used for InquireChannelInitiator; Z/OS only
   #
   ChannelInitiator =>
   {
    ActiveChannels		=> [ &MQIACH_ACTIVE_CHL,		&MQCFT_INTEGER ],
    ActiveChannelsMax		=> [ &MQIACH_ACTIVE_CHL_MAX,		&MQCFT_INTEGER ],
    ActiveChannelsPaused	=> [ &MQIACH_ACTIVE_CHL_PAUSED,		&MQCFT_INTEGER ],
    ActiveChannelsRetrying	=> [ &MQIACH_ACTIVE_CHL_RETRY,		&MQCFT_INTEGER ],
    ActiveChannelsStarted	=> [ &MQIACH_ACTIVE_CHL_STARTED,	&MQCFT_INTEGER ],
    ActiveChannelsStopped	=> [ &MQIACH_ACTIVE_CHL_STOPPED,	&MQCFT_INTEGER ],
    AdpatersMax			=> [ &MQIACH_ADAPS_MAX,			&MQCFT_INTEGER ],
    AdpatersStarted		=> [ &MQIACH_ADAPS_STARTED,		&MQCFT_INTEGER ],
    ChannelInitiatorStatus	=> [ &MQIACF_CHINIT_STATUS,		&MQCFT_INTEGER,		$ResponseValues{ServiceStatus} ],
    CurrentChannels		=> [ &MQIACH_CURRENT_CHL,		&MQCFT_INTEGER ],
    CurrentChannelsLU62		=> [ &MQIACH_CURRENT_CHL_LU62,		&MQCFT_INTEGER ],
    CurrentChannelsMax		=> [ &MQIACH_CURRENT_CHL_MAX,		&MQCFT_INTEGER ],
    CurrentChannelsTCP		=> [ &MQIACH_CURRENT_CHL_TCP,		&MQCFT_INTEGER ],
    DispatchersMax		=> [ &MQIACH_DISPS_MAX,			&MQCFT_INTEGER ],
    DispatchersStarted		=> [ &MQIACH_DISPS_STARTED,		&MQCFT_INTEGER ],
    InboundDisposition		=> [ &MQIACH_INBOUND_DISP,		&MQCFT_INTEGER ],
    IPAddress			=> [ &MQCACH_IP_ADDRESS,		&MQCFT_STRING ],
    ListenerStatus		=> [ &MQIACH_LISTENER_STATUS,		&MQCFT_INTEGER,		$ResponseValues{ListenerStatus} ],
    LUName			=> [ &MQCA_LU_NAME,			&MQCFT_STRING ],
    Port			=> [ &MQIACH_PORT_NUMBER,		&MQCFT_INTEGER ],
    SSLTasksMax			=> [ &MQIACH_SSLTASKS_MAX,		&MQCFT_INTEGER ],
    SSLTasksStarted		=> [ &MQIACH_SSLTASKS_STARTED,		&MQCFT_INTEGER ],
    TCPName			=> [ &MQCACH_TCP_NAME,			&MQCFT_STRING ],
    TransportType		=> [ &MQIACH_XMIT_PROTOCOL_TYPE,	&MQCFT_INTEGER,		$ResponseValues{TransportType} ],
   },

   #
   # ChannelStatus is used for InquireChannelStatus
   #
   ChannelStatus =>
   {
    Batches			=> [ &MQIACH_BATCHES,			&MQCFT_INTEGER ],
    BatchSize			=> [ &MQIACH_BATCH_SIZE,		&MQCFT_INTEGER ],
    BatchSizeIndicator		=> [ &MQIACH_BATCH_SIZE_INDICATOR,	&MQCFT_INTEGER_LIST ],
    BuffersReceived		=> [ &MQIACH_BUFFERS_RCVD,		&MQCFT_INTEGER ],
    BuffersSent			=> [ &MQIACH_BUFFERS_SENT,		&MQCFT_INTEGER ],
    BytesReceived		=> [ &MQIACH_BYTES_RCVD,		&MQCFT_INTEGER ],
    BytesSent			=> [ &MQIACH_BYTES_SENT,		&MQCFT_INTEGER ],
    ChannelDisposition		=> [ &MQIACH_CHANNEL_DISP,		&MQCFT_INTEGER,		$ResponseValues{ChannelDisposition} ],
    ChannelInstanceType		=> [ &MQIACH_CHANNEL_INSTANCE_TYPE,	&MQCFT_INTEGER,		$ResponseValues{ChannelInstanceType} ],
    ChannelMonitoring		=> [ &MQIA_MONITORING_CHANNEL,		&MQCFT_INTEGER,		$ResponseValues{MonitoringDft} ],
    ChannelName			=> [ &MQCACH_CHANNEL_NAME,		&MQCFT_STRING ],
    ChannelStartDate		=> [ &MQCACH_CHANNEL_START_DATE,	&MQCFT_STRING ],
    ChannelStartTime		=> [ &MQCACH_CHANNEL_START_TIME,	&MQCFT_STRING ],
    ChannelStatus		=> [ &MQIACH_CHANNEL_STATUS,		&MQCFT_INTEGER,		$ResponseValues{ChannelStatus} ],
    ChannelType			=> [ &MQIACH_CHANNEL_TYPE,		&MQCFT_INTEGER,		$ResponseValues{ChannelType} ],
    ClientIdentifier		=> [ &MQCACH_CLIENT_ID,			&MQCFT_STRING ],
    CompressionRate		=> [ &MQIACH_COMPRESSION_RATE,		&MQCFT_INTEGER_LIST ],
    CompressionTime		=> [ &MQIACH_COMPRESSION_TIME,		&MQCFT_INTEGER_LIST ],
    ConnectionName		=> [ &MQCACH_CONNECTION_NAME,		&MQCFT_STRING ],
    CurrentLUWID		=> [ &MQCACH_CURRENT_LUWID,		&MQCFT_STRING ],
    CurrentMsgs			=> [ &MQIACH_CURRENT_MSGS,		&MQCFT_INTEGER ],
    CurrentSequenceNumber	=> [ &MQIACH_CURRENT_SEQ_NUMBER,	&MQCFT_INTEGER ],
    CurrentSharingConversations	=> [ &MQIACH_CURRENT_SHARING_CONVS,	&MQCFT_INTEGER ],
    ExitTime			=> [ &MQIACH_EXIT_TIME_INDICATOR,	&MQCFT_INTEGER_LIST ],
    HeaderCompression		=> [ &MQIACH_HDR_COMPRESSION,		&MQCFT_INTEGER_LIST,		$ResponseValues{HeaderCompression} ],
    HeartbeatInterval		=> [ &MQIACH_HB_INTERVAL,		&MQCFT_INTEGER ],
    InDoubtStatus		=> [ &MQIACH_INDOUBT_STATUS,		&MQCFT_INTEGER ],
    KeepAliveInterval		=> [ &MQIACH_KEEP_ALIVE_INTERVAL,	&MQCFT_INTEGER,		$ResponseValues{KeepAliveInterval} ],
    LastLUWID			=> [ &MQCACH_LAST_LUWID,		&MQCFT_STRING ],
    LastMsgDate			=> [ &MQCACH_LAST_MSG_DATE,		&MQCFT_STRING ],
    LastMsgTime			=> [ &MQCACH_LAST_MSG_TIME,		&MQCFT_STRING ],
    LastSequenceNumber		=> [ &MQIACH_LAST_SEQ_NUMBER,		&MQCFT_INTEGER ],
    LocalAddress		=> [ &MQCACH_LOCAL_ADDRESS,		&MQCFT_STRING ],
    LongRetriesLeft		=> [ &MQIACH_LONG_RETRIES_LEFT,		&MQCFT_INTEGER ],
    MaxMsgLength		=> [ &MQIACH_MAX_MSG_LENGTH,		&MQCFT_INTEGER ],
    MaxSharingConversations	=> [ &MQIACH_MAX_SHARING_CONVS,		&MQCFT_INTEGER ],
    MCAJobName			=> [ &MQCACH_MCA_JOB_NAME,		&MQCFT_STRING ],
    MCAStatus			=> [ &MQIACH_MCA_STATUS,		&MQCFT_INTEGER,		$ResponseValues{MCAStatus} ],
    MCAUserIdentifier		=> [ &MQCACH_MCA_USER_ID,		&MQCFT_STRING ],
    MessageCompression		=> [ &MQIACH_MSG_COMPRESSION,		&MQCFT_INTEGER,		$ResponseValues{MessageCompression} ],
    Msgs			=> [ &MQIACH_MSGS,			&MQCFT_INTEGER ],
    MsgsAvailable		=> [ &MQIACH_XMITQ_MSGS_AVAILABLE,	&MQCFT_INTEGER ],
    NetTime			=> [ &MQIACH_NETWORK_TIME_INDICATOR,	&MQCFT_INTEGER ],
    NonPersistentMsgSpeed	=> [ &MQIACH_NPM_SPEED,			&MQCFT_INTEGER,		$ResponseValues{NonPersistentMsgSpeed} ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    RemoteApplTag		=> [ &MQCACH_REMOTE_APPL_TAG,		&MQCFT_STRING ],
    RemoteProduct		=> [ &MQCACH_REMOTE_PRODUCT,		&MQCFT_STRING ],
    RemoteQMgrName		=> [ &MQCA_REMOTE_Q_MGR_NAME,		&MQCFT_STRING ],
    RemoteVersion		=> [ &MQCACH_REMOTE_VERSION,		&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    SSLCertRemoteIssuerName	=> [ &MQCACH_SSL_CERT_ISSUER_NAME,	&MQCFT_STRING ],
    SSLCertUserId		=> [ &MQCACH_SSL_CERT_USER_ID,		&MQCFT_STRING ],
    SSLKeyResetDate		=> [ &MQCACH_SSL_KEY_RESET_DATE,	&MQCFT_STRING ],
    SSLKeyResets		=> [ &MQIACH_SSL_KEY_RESETS,		&MQCFT_INTEGER ],
    SSLKeyResetTime		=> [ &MQCACH_SSL_KEY_RESET_TIME,	&MQCFT_STRING ],
    SSLShortPeerName		=> [ &MQCACH_SSL_SHORT_PEER_NAME,	&MQCFT_STRING ],
    ShortRetriesLeft		=> [ &MQIACH_SHORT_RETRIES_LEFT,	&MQCFT_INTEGER ],
    StopRequested		=> [ &MQIACH_STOP_REQUESTED,		&MQCFT_INTEGER ],
    SubState			=> [ &MQIACH_CHANNEL_SUBSTATE,		&MQCFT_INTEGER,		$ResponseValues{ChannelSubState} ],
    XmitQName			=> [ &MQCACH_XMIT_Q_NAME,		&MQCFT_STRING ],
    XQTime			=> [ &MQIACH_XMITQ_TIME_INDICATOR,	&MQCFT_INTEGER_LIST ],
   },

   Escape =>
   {
    EscapeText			=> [ &MQCACF_ESCAPE_TEXT,		&MQCFT_STRING ],
    EscapeType			=> [ &MQIACF_ESCAPE_TYPE,		&MQCFT_INTEGER,		$ResponseValues{EscapeType} ],
   },

   #
   # New entries for MQSeries 5.1
   #
   Cluster =>
   {
    BatchHeartBeat		=> [ &MQIACH_BATCH_HB,			&MQCFT_INTEGER ],
    ClusterQMgrName		=> [ &MQCA_CLUSTER_Q_MGR_NAME,		&MQCFT_STRING ],
    ChannelStatus		=> [ &MQIACH_CHANNEL_STATUS,		&MQCFT_INTEGER,		$ResponseValues{ChannelStatus} ],
    ChannelName			=> [ &MQCACH_CHANNEL_NAME,		&MQCFT_STRING ],
    ConnectionName		=> [ &MQCACH_CONNECTION_NAME,		&MQCFT_STRING ],
    ChannelDesc			=> [ &MQCACH_DESC,			&MQCFT_STRING ],
    KeepAliveInterval		=> [ &MQIACH_KEEP_ALIVE_INTERVAL,	&MQCFT_INTEGER,		$ResponseValues{KeepAliveInterval} ],
    LocalAddress		=> [ &MQCACH_LOCAL_ADDRESS,		&MQCFT_STRING ],
    MCAName			=> [ &MQCACH_MCA_NAME,			&MQCFT_STRING ],
    MCAType			=> [ &MQIACH_MCA_TYPE,			&MQCFT_INTEGER,		$ResponseValues{MCAType} ],
    MCAUserIdentifier		=> [ &MQCACH_MCA_USER_ID,		&MQCFT_STRING ],
    ModeName			=> [ &MQCACH_MODE_NAME,			&MQCFT_STRING ],
    MsgRetryExit		=> [ &MQCACH_MR_EXIT_NAME,		&MQCFT_STRING ],
    MsgRetryUserData		=> [ &MQCACH_MR_EXIT_USER_DATA,		&MQCFT_STRING ],
    MsgExit			=> [ &MQCACH_MSG_EXIT_NAME,		&MQCFT_STRING ],
    MsgUserData			=> [ &MQCACH_MSG_EXIT_USER_DATA,	&MQCFT_STRING ],
    NonPersistentMsgSpeed	=> [ &MQIACH_NPM_SPEED,			&MQCFT_INTEGER,		$ResponseValues{NonPersistentMsgSpeed} ],
    Password			=> [ &MQCACH_PASSWORD,			&MQCFT_STRING ],
    PutAuthority		=> [ &MQIACH_PUT_AUTHORITY,		&MQCFT_INTEGER,		$ResponseValues{PutAuthority} ],
    QMgrDefinitionType		=> [ &MQIACF_Q_MGR_DEFINITION_TYPE,	&MQCFT_INTEGER,		$ResponseValues{QMgrDefinitionType} ],
    QMgrType			=> [ &MQIACF_Q_MGR_TYPE,		&MQCFT_INTEGER,		$ResponseValues{QMgrType} ],
    ReceiveExit			=> [ &MQCACH_RCV_EXIT_NAME,		&MQCFT_STRING ],
    ReceiveUserData		=> [ &MQCACH_RCV_EXIT_USER_DATA,	&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    SecurityExit		=> [ &MQCACH_SEC_EXIT_NAME,		&MQCFT_STRING ],
    SecurityUserData		=> [ &MQCACH_SEC_EXIT_USER_DATA,	&MQCFT_STRING ],
    SendExit			=> [ &MQCACH_SEND_EXIT_NAME,		&MQCFT_STRING ],
    SendUserData		=> [ &MQCACH_SEND_EXIT_USER_DATA,	&MQCFT_STRING ],
    TpName			=> [ &MQCACH_TP_NAME,			&MQCFT_STRING ],
    TransportType		=> [ &MQIACH_XMIT_PROTOCOL_TYPE,	&MQCFT_INTEGER,		$ResponseValues{TransportType} ],
    UserIdentifier		=> [ &MQCACH_USER_ID,			&MQCFT_STRING ],
    XmitQName			=> [ &MQCACH_XMIT_Q_NAME,		&MQCFT_STRING ],
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    ClusterDate			=> [ &MQCA_CLUSTER_DATE,		&MQCFT_STRING ],
    ClusterName			=> [ &MQCA_CLUSTER_NAME,		&MQCFT_STRING ],
    ClusterTime			=> [ &MQCA_CLUSTER_TIME,		&MQCFT_STRING ],
    QMgrIdentifier		=> [ &MQCA_Q_MGR_IDENTIFIER,		&MQCFT_STRING ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    ClusterInfo			=> [ &MQIACF_CLUSTER_INFO,		&MQCFT_INTEGER ],
    Suspend			=> [ &MQIACF_SUSPEND,			&MQCFT_INTEGER ],
    BatchInterval		=> [ &MQIACH_BATCH_INTERVAL,		&MQCFT_INTEGER ],
    BatchSize			=> [ &MQIACH_BATCH_SIZE,		&MQCFT_INTEGER ],
    DataConversion		=> [ &MQIACH_DATA_CONVERSION,		&MQCFT_INTEGER ],
    DiscInterval		=> [ &MQIACH_DISC_INTERVAL,		&MQCFT_INTEGER ],
    HeartbeatInterval		=> [ &MQIACH_HB_INTERVAL,		&MQCFT_INTEGER ],
    LongRetryCount		=> [ &MQIACH_LONG_RETRY,		&MQCFT_INTEGER ],
    LongRetryInterval		=> [ &MQIACH_LONG_TIMER,		&MQCFT_INTEGER ],
    MaxMsgLength		=> [ &MQIACH_MAX_MSG_LENGTH,		&MQCFT_INTEGER ],
    MsgRetryCount		=> [ &MQIACH_MR_COUNT,			&MQCFT_INTEGER ],
    MsgRetryInterval		=> [ &MQIACH_MR_INTERVAL,		&MQCFT_INTEGER ],
    NetworkPriority		=> [ &MQIACH_NETWORK_PRIORITY,		&MQCFT_INTEGER ],
    SeqNumberWrap		=> [ &MQIACH_SEQUENCE_NUMBER_WRAP,	&MQCFT_INTEGER ],
    ShortRetryCount		=> [ &MQIACH_SHORT_RETRY,		&MQCFT_INTEGER ],
    ShortRetryInterval		=> [ &MQIACH_SHORT_TIMER,		&MQCFT_INTEGER ],
    SSLCipherSpec		=> [ &MQCACH_SSL_CIPHER_SPEC,		&MQCFT_STRING ],
    SSLClientAuth		=> [ &MQIACH_SSL_CLIENT_AUTH,		&MQCFT_INTEGER,			$ResponseValues{SSLClientAuth} ],
    SSLPeerName			=> [ &MQCACH_SSL_PEER_NAME,		&MQCFT_STRING ],
   },

   Namelist =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    NameCount			=> [ &MQIA_NAME_COUNT,			&MQCFT_INTEGER ],
    NamelistDesc		=> [ &MQCA_NAMELIST_DESC,		&MQCFT_STRING ],
    NamelistName		=> [ &MQCA_NAMELIST_NAME,		&MQCFT_STRING ],
    NamelistNames		=> [ &MQCACF_NAMELIST_NAMES,		&MQCFT_STRING_LIST ],
    NamelistType		=> [ &MQIA_NAMELIST_TYPE,		&MQCFT_INTEGER,		 $ResponseValues{NamelistType}],
    Names			=> [ &MQCA_NAMES,			&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QSGDispositions		=> [ &MQIACF_QSG_DISPS,			&MQCFT_INTEGER_LIST,	$ResponseValues{QSGDisposition} ],
   },

   #
   # AuthInfo is new with WebSphere MQ 5.3
   #
   AuthInfo =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    AuthInfoConnName		=> [ &MQCA_AUTH_INFO_CONN_NAME,		&MQCFT_STRING ],
    AuthInfoDesc		=> [ &MQCA_AUTH_INFO_DESC,		&MQCFT_STRING ],
    AuthInfoName		=> [ &MQCA_AUTH_INFO_NAME,		&MQCFT_STRING ],
    AuthInfoNames		=> [ &MQCACF_AUTH_INFO_NAMES,		&MQCFT_STRING_LIST ],
    AuthInfoType		=> [ &MQIA_AUTH_INFO_TYPE,		&MQCFT_INTEGER,                $ResponseValues{AuthInfoType} ],
    LDAPPassword		=> [ &MQCA_LDAP_PASSWORD,		&MQCFT_STRING ],
    LDAPUserName		=> [ &MQCA_LDAP_USER_NAME,		&MQCFT_STRING ],
    OCSPResponderURL		=> [ &MQCA_AUTH_INFO_OCSP_URL,		&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QSGDispositions		=> [ &MQIACF_QSG_DISPS,			&MQCFT_INTEGER_LIST,	        $ResponseValues{QSGDisposition} ],
   },

   #
   # QueueStatus is new with WebSphere MQ 5.3
   #
   QueueStatus =>
   {
    ApplDesc			=> [ &MQCACF_APPL_DESC,			&MQCFT_STRING ],
    ApplTag			=> [ &MQCACF_APPL_TAG,			&MQCFT_STRING ],
    ApplType			=> [ &MQIA_APPL_TYPE,			&MQCFT_INTEGER,			$ResponseValues{ApplType} ],
    ASId			=> [ &MQCACF_ASID,			&MQCFT_STRING, ],
    AsynchronousState          => [ &MQIACF_ASYNC_STATE,		&MQCFT_INTEGER,                $ResponseValues{AsynchronousState} ],
    ChannelName			=> [ &MQCACH_CHANNEL_NAME,		&MQCFT_STRING ],
    Conname			=> [ &MQCACH_CONNECTION_NAME,		&MQCFT_STRING ],
    CurrentQDepth		=> [ &MQIA_CURRENT_Q_DEPTH,		&MQCFT_INTEGER ],
    ExternalUOWId		=> [ &MQBACF_EXTERNAL_UOW_ID,		&MQCFT_BYTE_STRING ],
    HandleState			=> [ &MQIACF_HANDLE_STATE,		&MQCFT_INTEGER,		$ResponseValues{HandleState} ],
    LastGetDate			=> [ &MQCACF_LAST_GET_DATE,		&MQCFT_STRING ],
    LastGetTime			=> [ &MQCACF_LAST_GET_TIME,		&MQCFT_STRING ],
    LastPutDate			=> [ &MQCACF_LAST_PUT_DATE,		&MQCFT_STRING ],
    LastPutTime			=> [ &MQCACF_LAST_PUT_TIME,		&MQCFT_STRING ],
    MediaRecoveryLog		=> [ &MQCACF_MEDIA_LOG_EXTENT_NAME,	&MQCFT_STRING ],
    OldestMsgAge		=> [ &MQIACF_OLDEST_MSG_AGE,		&MQCFT_INTEGER ],
    OnQTime			=> [ &MQIACF_Q_TIME_INDICATOR,		&MQCFT_INTEGER_LIST ],
    OpenBrowse			=> [ &MQIACF_OPEN_BROWSE,		&MQCFT_INTEGER ],
    OpenInputCount		=> [ &MQIA_OPEN_INPUT_COUNT,		&MQCFT_INTEGER ],
    OpenInputType		=> [ &MQIACF_OPEN_INPUT_TYPE,		&MQCFT_INTEGER,		$ResponseValues{QStatusInputType} ],
    OpenInquire			=> [ &MQIACF_OPEN_INQUIRE,		&MQCFT_INTEGER ],
    OpenOptions			=> [ &MQIACF_OPEN_OPTIONS,		&MQCFT_INTEGER ],
    OpenOutputCount		=> [ &MQIA_OPEN_OUTPUT_COUNT,		&MQCFT_INTEGER ],
    OpenOutput			=> [ &MQIACF_OPEN_OUTPUT,		&MQCFT_INTEGER ],
    OpenSet			=> [ &MQIACF_OPEN_SET,			&MQCFT_INTEGER ],
    OpenType			=> [ &MQIACF_OPEN_TYPE,			&MQCFT_INTEGER,		$ResponseValues{OpenType} ],
    PSBName			=> [ &MQCACF_PSB_NAME,			&MQCFT_STRING ],
    PSTId			=> [ &MQCACF_PST_ID,			&MQCFT_STRING ],
    ProcessId			=> [ &MQIACF_PROCESS_ID,		&MQCFT_INTEGER ],
    QMgrUOWId			=> [ &MQBACF_Q_MGR_UOW_ID,		&MQCFT_BYTE_STRING ],
    QName			=> [ &MQCA_Q_NAME,			&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QueueMonitoring		=> [ &MQIA_MONITORING_Q,		&MQCFT_INTEGER,		$ResponseValues{QMgrMonitoring} ],
    StatusType			=> [ &MQIACF_Q_STATUS_TYPE,		&MQCFT_STRING,		$ResponseValues{QStatusType} ],
    TaskNumber			=> [ &MQCACF_TASK_NUMBER,		&MQCFT_STRING ],
    ThreadId			=> [ &MQIACF_THREAD_ID,			&MQCFT_INTEGER ],
    TransactionId		=> [ &MQCACF_TRANSACTION_ID,		&MQCFT_STRING ],
    UOWIdentifier		=> [ &MQBACF_EXTERNAL_UOW_ID,		&MQCFT_BYTE_STRING ],
    UOWType			=> [ &MQIACF_UOW_TYPE,			&MQCFT_INTEGER,		$ResponseValues{UOWType} ],
    UncommittedMsgs		=> [ &MQIACF_UNCOMMITTED_MSGS,		&MQCFT_INTEGER ],
    UserIdentifier		=> [ &MQCACF_USER_IDENTIFIER,		&MQCFT_STRING ],
   },

   #
   # CFStruc is for MQ on z/OS
   #
   # NOTE: we keep the fields as 'CFStructXXX' as that is the name we picked
   #	   for MQSC in the MQ 5.2 days.
   #
   CFStruc =>
   {
    Access			=> [ &MQIACF_CF_STRUC_ACCESS,		&MQCFT_INTEGER,		$ResponseValues{CFStrucAccess} ],
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    BackupDate			=> [ &MQCACF_BACKUP_DATE,		&MQCFT_STRING ],
    BackupEndRBA		=> [ &MQCACF_CF_STRUC_BACKUP_END,	&MQCFT_STRING ],
    BackupSize			=> [ &MQIACF_CF_STRUC_BACKUP_SIZE,	&MQCFT_INTEGER ],
    BackupStartRBA		=> [ &MQCACF_CF_STRUC_BACKUP_START,	&MQCFT_STRING ],
    BackupTime			=> [ &MQCACF_BACKUP_TIME,		&MQCFT_STRING ],
    CFConlos			=> [ &MQIA_CF_CFCONLOS,			&MQCFT_INTEGER,         $ResponseValues{CFConlos} ],
    CFStatusType		=> [ &MQIACF_CF_STATUS_TYPE,		&MQCFT_INTEGER,		$ResponseValues{CFStatusType} ],
    CFStrucDesc			=> [ &MQCA_CF_STRUC_DESC,		&MQCFT_STRING ],
    CFStrucName			=> [ &MQCA_CF_STRUC_NAME,		&MQCFT_STRING ],
    CFStrucNames		=> [ &MQCACF_CF_STRUC_NAMES,		&MQCFT_STRING_LIST ],
    CFStrucStatus		=> [ &MQIACF_CF_STRUC_STATUS,		&MQCFT_INTEGER,		$ResponseValues{CFStrucStatus} ],
    CFStrucType			=> [ &MQIACF_CF_STRUC_TYPE,		&MQCFT_INTEGER,		$ResponseValues{CFStrucType} ],
    CFLevel			=> [ &MQIA_CF_LEVEL,			&MQCFT_INTEGER ],
    DSBlock			=> [ &MQIACF_CF_SMDS_BLOCK_SIZE,		&MQCFT_INTEGER,         $ResponseValues{DSBlock} ],
    DSBufs			=> [ &MQIA_CF_SMDS_BUFFERS,		&MQCFT_INTEGER ],
    DSExpand			=> [ &MQIACF_CF_SMDS_EXPAND,		&MQCFT_INTEGER,		$ResponseValues{DSExpand} ],
    DSGroup			=> [ &MQCACF_CF_SMDS_GENERIC_NAME,	&MQCFT_STRING ],

    EntriesMax			=> [ &MQIACF_CF_STRUC_ENTRIES_MAX,	&MQCFT_INTEGER ],
    EntriesUsed			=> [ &MQIACF_CF_STRUC_ENTRIES_USED,	&MQCFT_INTEGER ],
    FailDate			=> [ &MQCACF_FAIL_DATE,			&MQCFT_STRING ],
    FailTime			=> [ &MQCACF_FAIL_TIME,			&MQCFT_STRING ],
    LogQMgrNames		=> [ &MQCACF_CF_STRUC_LOG_Q_MGRS,	&MQCFT_STRING_LIST ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    Offload			=> [ &MQIA_CF_OFFLOAD,			&MQCFT_INTEGER,		$ResponseValues{Offload} ],
    OffLdUse			=> [ &MQIA_CF_OFFLDUSE,		&MQCFT_INTEGER,		$ResponseValues{OffLdUse} ],
    OFFLD1SZ			=> [ &MQCACF_CF_OFFLOAD_SIZE1,		&MQCFT_STRING ],
    OFFLD2SZ			=> [ &MQCACF_CF_OFFLOAD_SIZE2,		&MQCFT_STRING ],
    OFFLD3SZ			=> [ &MQCACF_CF_OFFLOAD_SIZE3,		&MQCFT_STRING ],
    OFFLD1TH			=> [ &MQIA_CF_OFFLOAD_THRESHOLD1,	&MQCFT_INTEGER ],
    OFFLD2TH			=> [ &MQIA_CF_OFFLOAD_THRESHOLD2,	&MQCFT_INTEGER ],
    OFFLD3TH			=> [ &MQIA_CF_OFFLOAD_THRESHOLD3,	&MQCFT_INTEGER ],
    Recauto			=> [ &MQIA_CF_RECAUTO,			&MQCFT_INTEGER ],
    Recovery			=> [ &MQIA_CF_RECOVER,			&MQCFT_INTEGER ],

    SizeMax			=> [ &MQIACF_CF_STRUC_SIZE_MAX,		&MQCFT_INTEGER ],
    SizeUsed			=> [ &MQIACF_CF_STRUC_SIZE_USED,	&MQCFT_INTEGER ],
    SysName			=> [ &MQCACF_SYSTEM_NAME,		&MQCFT_STRING ],
    Recovery			=> [ &MQIA_CF_RECOVER,			&MQCFT_INTEGER ],
    RcvDate			=> [ &MQCACF_RECOVERY_DATE,		&MQCFT_STRING ],
    RcvTime			=> [ &MQCACF_RECOVERY_TIME,		&MQCFT_STRING ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
   },

   #
   # CFStruct is for MQ on z/OS
   #
   # NOTE: CFStruct is for backwards compatibility with pre-1.24 MQSC
   #	   New code should use CFStruc (no final 't')
   #
   CFStruct =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    CFStructDesc		=> [ &MQCA_CF_STRUC_DESC,		&MQCFT_STRING ],
    CFStructName		=> [ &MQCA_CF_STRUC_NAME,		&MQCFT_STRING ],
    CFStructNames		=> [ &MQCACF_CF_STRUC_NAMES,		&MQCFT_STRING_LIST ],
    CFStructLevel		=> [ &MQIA_CF_LEVEL,			&MQCFT_INTEGER ],
    Recovery			=> [ &MQIA_CF_RECOVER,			&MQCFT_INTEGER ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    CFConlos			=> [ &MQIA_CF_CFCONLOS,			&MQCFT_INTEGER,         $ResponseValues{CFConlos} ],
    DSBlock			=> [ &MQIACF_CF_SMDS_BLOCK_SIZE,		&MQCFT_INTEGER,         $ResponseValues{DSBlock} ],
    DSBufs			=> [ &MQIA_CF_SMDS_BUFFERS,		&MQCFT_INTEGER ],
    DSExpand			=> [ &MQIACF_CF_SMDS_EXPAND,		&MQCFT_INTEGER,		$ResponseValues{DSExpand} ],
    DSGroup			=> [ &MQCACF_CF_SMDS_GENERIC_NAME,	&MQCFT_STRING ],
    Offload			=> [ &MQIA_CF_OFFLOAD,			&MQCFT_INTEGER,		$ResponseValues{Offload} ],
    OffLdUse			=> [ &MQIA_CF_OFFLDUSE,		&MQCFT_INTEGER,		$ResponseValues{OffLdUse} ],
    OFFLD1SZ			=> [ &MQCACF_CF_OFFLOAD_SIZE1,		&MQCFT_STRING ],
    OFFLD2SZ			=> [ &MQCACF_CF_OFFLOAD_SIZE2,		&MQCFT_STRING ],
    OFFLD3SZ			=> [ &MQCACF_CF_OFFLOAD_SIZE3,		&MQCFT_STRING ],
    OFFLD1TH			=> [ &MQIA_CF_OFFLOAD_THRESHOLD1,	&MQCFT_INTEGER ],
    OFFLD2TH			=> [ &MQIA_CF_OFFLOAD_THRESHOLD2,	&MQCFT_INTEGER ],
    OFFLD3TH			=> [ &MQIA_CF_OFFLOAD_THRESHOLD3,	&MQCFT_INTEGER ],
    Recauto			=> [ &MQIA_CF_RECAUTO,			&MQCFT_INTEGER ],
   },

   #
   # StorageClass is for MQ on z/OS
   #
   # NOTE: we keep the key fields as 'StorageClassName' as that is the
   # name we picked for MQSC in the MQ 5.2 days.
   #
   StorageClass =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    PageSetId			=> [ &MQIA_PAGESET_ID,			&MQCFT_INTEGER ],
    PassTicketApplication	=> [ &MQCA_PASS_TICKET_APPL,		&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    QSGDispositions		=> [ &MQIACF_QSG_DISPS,			&MQCFT_INTEGER_LIST,	$ResponseValues{QSGDisposition} ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    StorageClassDesc		=> [ &MQCA_STORAGE_CLASS_DESC,		&MQCFT_STRING ],
    StorageClassName		=> [ &MQCA_STORAGE_CLASS,		&MQCFT_STRING ],
    StorageClassNames		=> [ &MQCACF_STORAGE_CLASS_NAMES,	&MQCFT_STRING_LIST ],
    XCFGroupName		=> [ &MQCA_XCF_GROUP_NAME,		&MQCFT_STRING ],
    XCFMemberName		=> [ &MQCA_XCF_MEMBER_NAME,		&MQCFT_STRING ],
   },

   #
   # InquireSystem is for MQ on z/OS
   #
   InquireSystem =>
   {
    ParameterType		=> [ &MQIACF_SYSP_TYPE,			&MQCFT_INTEGER,		$ResponseValues{ParameterType} ],
    CheckpointCount		=> [ &MQIACF_SYSP_CHKPOINT_COUNT,	&MQCFT_INTEGER ],
    ClusterCacheType		=> [ &MQIACF_SYSP_CLUSTER_CACHE,	&MQCFT_INTEGER,		$ResponseValues{ClusterCacheType} ],
    CodedCharSetId		=> [ &MQIA_CODED_CHAR_SET_ID,		&MQCFT_INTEGER ],
    CommandUserId		=> [ &MQCACF_SYSP_CMD_USER_ID,		&MQCFT_STRING ],
    DB2BlobTasks		=> [ &MQIACF_SYSP_DB2_BLOB_TASKS,	&MQCFT_INTEGER ],
    DB2Name			=> [ &MQCACF_DB2_NAME,			&MQCFT_STRING ],
    DB2Tasks			=> [ &MQIACF_SYSP_DB2_TASKS,		&MQCFT_INTEGER ],
    DSGName			=> [ &MQCACF_DSG_NAME,			&MQCFT_STRING ],
    ExitInterval		=> [ &MQIACF_SYSP_EXIT_INTERVAL,	&MQCFT_INTEGER ],
    ExitTasks			=> [ &MQIACF_SYSP_EXIT_TASKS,		&MQCFT_INTEGER ],
    MaxConnects			=> [ &MQIACF_SYSP_MAX_CONNS,		&MQCFT_INTEGER ],
    MaxConnectsBackground	=> [ &MQIACF_SYSP_MAX_CONNS_BACK,	&MQCFT_INTEGER ],
    MaxConnectsForeground	=> [ &MQIACF_SYSP_MAX_CONNS_FORE,	&MQCFT_INTEGER ],
    MULCCapture			=> [ &MQIACF_MULC_CAPTURE,		&MQCFT_INTEGER,		$ResponseValues{MULCCapture} ],
    OpMode			=> [ &MQIACF_OPERATION_MODE,		&MQCFT_INTEGER_LIST ],
    OTMADruExit			=> [ &MQCACF_SYSP_OTMA_DRU_EXIT,	&MQCFT_STRING ],
    OTMAGroup			=> [ &MQCACF_SYSP_OTMA_GROUP,		&MQCFT_STRING ],
    OTMAInterval		=> [ &MQIACF_SYSP_OTMA_INTERVAL,	&MQCFT_INTEGER ],
    OTMAMember			=> [ &MQCACF_SYSP_OTMA_MEMBER,		&MQCFT_STRING ],
    OTMSTpipePrefix		=> [ &MQCACF_SYSP_OTMA_TPIPE_PFX,	&MQCFT_STRING ],
    QIndexDefer			=> [ &MQIACF_SYSP_Q_INDEX_DEFER,	&MQCFT_INTEGER ],
    QSGName			=> [ &MQCA_QSG_NAME,			&MQCFT_STRING ],
    RESLEVELAudit		=> [ &MQIACF_SYSP_RESLEVEL_AUDIT,	&MQCFT_INTEGER ],
    RoutingCode			=> [ &MQIACF_SYSP_ROUTING_CODE,		&MQCFT_INTEGER_LIST ],
    Service			=> [ &MQCACF_SYSP_SERVICE,		&MQCFT_STRING ],
    SMFAccounting		=> [ &MQIACF_SYSP_SMF_ACCOUNTING,	&MQCFT_INTEGER ],
    SMFStatistics		=> [ &MQIACF_SYSP_SMF_STATS,		&MQCFT_INTEGER ],
    SMFInterval			=> [ &MQIACF_SYSP_SMF_INTERVAL,		&MQCFT_INTEGER ],
    TraceClass			=> [ &MQIACF_SYSP_TRACE_CLASS,		&MQCFT_INTEGER_LIST ],
    TraceSize			=> [ &MQIACF_SYSP_TRACE_SIZE,		&MQCFT_INTEGER ],
    WLMInterval			=> [ &MQIACF_SYSP_WLM_INTERVAL,		&MQCFT_INTEGER ],
    WLMIntervalUnits		=> [ &MQIACF_SYSP_WLM_INT_UNITS,	&MQCFT_INTEGER,		$ResponseValues{WLMIntervalUnits} ],
   },

   #
   # InquireUsage is for MQ on z/OS
   #
   InquireUsage =>
   {
    BufferPoolId		=> [ &MQIACF_BUFFER_POOL_ID,		&MQCFT_INTEGER ],
    DataSetName			=> [ &MQCACF_DATA_SET_NAME,		&MQCFT_STRING ],
    DataSetType			=> [ &MQIACF_USAGE_DATA_SET_TYPE,	&MQCFT_INTEGER,		$ResponseValues{UsageDataSetType} ],
    ExpandCount			=> [ &MQIACF_USAGE_EXPAND_COUNT,	&MQCFT_INTEGER ],
    ExpandType			=> [ &MQIACF_USAGE_EXPAND_TYPE,		&MQCFT_INTEGER,		$ResponseValues{UsageExpandType} ],
    LogRBA			=> [ &MQCACF_USAGE_LOG_RBA,		&MQCFT_STRING ],
    LogLRSN			=> [ &MQCACF_USAGE_LOG_LRSN,		&MQCFT_STRING ],
    NonPersistentDataPages	=> [ &MQIACF_USAGE_NONPERSIST_PAGES,	&MQCFT_INTEGER ],
    PageSetId			=> [ &MQIA_PAGESET_ID,			&MQCFT_INTEGER ],
    PageSetStatus		=> [ &MQIACF_PAGESET_STATUS,		&MQCFT_INTEGER,		$ResponseValues{UsagePageSetStatus} ],
    PersistentDataPages		=> [ &MQIACF_USAGE_PERSIST_PAGES,	&MQCFT_INTEGER ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    TotalBuffers		=> [ &MQIACF_USAGE_TOTAL_BUFFERS,	&MQCFT_INTEGER ],
    TotalPages			=> [ &MQIACF_USAGE_TOTAL_PAGES,		&MQCFT_INTEGER ],
    UnusedPages			=> [ &MQIACF_USAGE_UNUSED_PAGES,	&MQCFT_INTEGER ],
    UsageType			=> [ &MQIACF_USAGE_TYPE,		&MQCFT_INTEGER,		$ResponseValues{UsageType} ],
   },

   Connection =>
   {
    ApplDesc		       => [ &MQCACF_APPL_DESC,			&MQCFT_STRING ],
    ApplTag		       => [ &MQCACF_APPL_TAG,			&MQCFT_STRING ],
    ApplType		       => [ &MQIA_APPL_TYPE,			&MQCFT_INTEGER,	        $ResponseValues{ConnApplType} ],
    ASID		       => [ &MQCACF_ASID,			&MQCFT_STRING ],
    AsynchronousState          => [ &MQIACF_ASYNC_STATE,		&MQCFT_INTEGER,                $ResponseValues{AsynchronousState} ],
    ChannelName		       => [ &MQCACH_CHANNEL_NAME,		&MQCFT_STRING ],
    ConnectionId	       => [ &MQBACF_CONNECTION_ID,		&MQCFT_BYTE_STRING ],
    ConnectionName	       => [ &MQCACH_CONNECTION_NAME,		&MQCFT_STRING ],
    ConnectionOptions	       => [ &MQIACF_CONNECT_OPTIONS,		&MQCFT_INTEGER_LIST ],
    ConnInfoType	       => [ &MQIACF_CONN_INFO_TYPE,		&MQCFT_INTEGER ,	        $ResponseValues{ConnInfoType} ],
    Destination 	       => [ &MQCACF_DESTINATION,		&MQCFT_STRING ],
    DestinationQMgr	       => [ &MQCACF_DESTINATION_Q_MGR,		&MQCFT_STRING ],
    GenericConnectionId        => [ &MQBACF_GENERIC_CONNECTION_ID,      &MQCFT_BYTE_STRING ],
    HandleState		       => [ &MQIACF_HANDLE_STATE,		&MQCFT_INTEGER,	        $ResponseValues{HandleState} ],
    ObjectName		       => [ &MQCACF_OBJECT_NAME,		&MQCFT_STRING ],
    ObjectType		       => [ &MQIACF_OBJECT_TYPE,		&MQCFT_INTEGER,	        $ResponseValues{HandleObjectType} ],
    OpenOptions		       => [ &MQIACF_OPEN_OPTIONS,		&MQCFT_INTEGER ],
    OriginName		       => [ &MQCACF_ORIGIN_NAME,		&MQCFT_STRING ],
    OriginUOWId		       => [ &MQBACF_ORIGIN_UOW_ID,		&MQCFT_BYTE_STRING ],
    ProcessId		       => [ &MQIACF_PROCESS_ID,			&MQCFT_INTEGER ],
    PSBName		       => [ &MQCACF_PSB_NAME,			&MQCFT_STRING ],
    PSTId		       => [ &MQCACF_PST_ID,			&MQCFT_STRING ],
    QMgrUOWId		       => [ &MQBACF_Q_MGR_UOW_ID,		&MQCFT_BYTE_STRING ],
    QSGDisposition	       => [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{HandleQSGDisposition} ] ,
    ReadAhead		       => [ &MQIA_READ_AHEAD,		        &MQCFT_INTEGER,		$ResponseValues{DefReadAhead} ],
    ResponseId			=> [ &MQBACF_RESPONSE_ID,		&MQCFT_BYTE_STRING ],
    ResponseQMgrName		=> [ &MQCACF_RESPONSE_Q_MGR_NAME,	&MQCFT_STRING ],
    StartUOWLogExtent	       => [ &MQCACF_UOW_LOG_EXTENT_NAME,	&MQCFT_STRING ],
    SubId		       => [ &MQBACF_SUB_ID,			&MQCFT_BYTE_STRING ],
    SubName		       => [ &MQCACF_SUB_NAME,			&MQCFT_STRING ],
    TaskNumber		       => [ &MQCACF_TASK_NUMBER,		&MQCFT_STRING ],
    ThreadId		       => [ &MQIACF_THREAD_ID,			&MQCFT_INTEGER ],
    TopicString		       => [ &MQCA_TOPIC_STRING,			&MQCFT_STRING ],
    TransactionId	       => [ &MQCACF_TRANSACTION_ID,		&MQCFT_STRING ],
    UOWIdentifier	       => [ &MQBACF_EXTERNAL_UOW_ID,		&MQCFT_BYTE_STRING ],
    UOWLogStartDate	       => [ &MQCACF_UOW_LOG_START_DATE,		&MQCFT_STRING ],
    UOWLogStartTime	       => [ &MQCACF_UOW_LOG_START_TIME,		&MQCFT_STRING ],
    UOWStartDate	       => [ &MQCACF_UOW_START_DATE,		&MQCFT_STRING ],
    UOWStartTime	       => [ &MQCACF_UOW_START_TIME,		&MQCFT_STRING ],
    UOWState		       => [ &MQIACF_UOW_STATE,			&MQCFT_INTEGER,		     $ResponseValues{UOWState} ],
    UOWType		       => [ &MQIACF_UOW_TYPE,			&MQCFT_INTEGER,		     $ResponseValues{UOWType} ],
    URDisposition	       => [ &MQIA_UR_DISP,			&MQCFT_INTEGER,		$ResponseValues{URDisposition} ],
    UserId		       => [ &MQCACF_USER_IDENTIFIER,		&MQCFT_STRING],
   },

   #
   # InquireSecurity
   #
   InquireSecurity =>
   {
    SecurityInterval		=> [ &MQIACF_SECURITY_INTERVAL,		&MQCFT_INTEGER ],
    SecuritySwitch		=> [ &MQIACF_SECURITY_SWITCH,		&MQCFT_INTEGER,		$ResponseValues{SecuritySwitch} ],
    SecuritySwitchProfile	=> [ &MQCACF_SECURITY_PROFILE,		&MQCFT_STRING ],
    SecuritySwitchSetting	=> [ &MQIACF_SECURITY_SETTING,		&MQCFT_INTEGER,		$ResponseValues{SecuritySwitchSetting} ],
    SecurityTimeout		=> [ &MQIACF_SECURITY_TIMEOUT,		&MQCFT_INTEGER ],
   },

   #
   # Refresh Security
   #
   RefreshSecurity =>
   {
   },

   #
   # Re-verify security
   #
   ReverifySecurity =>
   {
   },

   #
   # AuthorityRecord (MQ v6 on distributed platforms)
   #
   AuthorityRecord =>
   {
    AuthorizationList		=> [ &MQIACF_AUTHORIZATION_LIST,	&MQCFT_INTEGER_LIST,		$ResponseValues{Authority} ],
    EntityName			=> [ &MQCACF_ENTITY_NAME,		&MQCFT_STRING ],
    EntityType			=> [ &MQIACF_ENTITY_TYPE,		&MQCFT_INTEGER,			$ResponseValues{EntityType} ],
    ObjectType			=> [ &MQIACF_OBJECT_TYPE,		&MQCFT_INTEGER,			$ResponseValues{ObjectType} ],
    Options			=> [ &MQIACF_AUTH_OPTIONS,		&MQCFT_INTEGER ],
    ProfileName			=> [ &MQCACF_AUTH_PROFILE_NAME,		&MQCFT_STRING ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
   },

   #
   # AuthorityService (MQ v6 on distributed platforms)
   #
   AuthorityService =>
   {
    InterfaceVersion		=> [ &MQIACF_INTERFACE_VERSION,		&MQCFT_INTEGER ],
    ServiceComponent		=> [ &MQCACF_SERVICE_COMPONENT,		&MQCFT_STRING ],
    UserIdSupport		=> [ &MQIACF_USER_ID_SUPPORT,		&MQCFT_INTEGER ],
   },

   #
   # Service (installable service for distributed MQ v6)
   #
   Service =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    ServiceDesc			=> [ &MQCA_SERVICE_DESC,		&MQCFT_STRING ],
    ServiceName			=> [ &MQCA_SERVICE_NAME,		&MQCFT_STRING ],
    ServiceType			=> [ &MQIA_SERVICE_TYPE,		&MQCFT_INTEGER,	$ResponseValues{ServiceType} ],
    StartArguments		=> [ &MQCA_SERVICE_START_ARGS,		&MQCFT_STRING ],
    StartCommand		=> [ &MQCA_SERVICE_START_COMMAND,	&MQCFT_STRING ],
    StartMode			=> [ &MQIA_SERVICE_CONTROL,		&MQCFT_INTEGER,	$ResponseValues{ServiceStartMode} ],
    StopArguments		=> [ &MQCA_SERVICE_STOP_ARGS,		&MQCFT_STRING ],
    StopCommand			=> [ &MQCA_SERVICE_STOP_COMMAND,	&MQCFT_STRING ],
    StderrDestination		=> [ &MQCA_STDERR_DESTINATION,		&MQCFT_STRING ],
    StdoutDestination		=> [ &MQCA_STDOUT_DESTINATION,		&MQCFT_STRING ],
   },

   #
   # Channel Listener (new with V6)
   #
   Listener =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE ,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME ,		&MQCFT_STRING ],
    Adapter			=> [ &MQIACH_ADAPTER,			&MQCFT_INTEGER ],
    Backlog			=> [ &MQIACH_BACKLOG,			&MQCFT_INTEGER ],
    Commands			=> [ &MQIACH_COMMAND_COUNT,		&MQCFT_INTEGER ],
    IPAddress			=> [ &MQCACH_IP_ADDRESS,		&MQCFT_STRING ],
    ListenerDesc		=> [ &MQCACH_LISTENER_DESC,		&MQCFT_STRING ],
    ListenerName		=> [ &MQCACH_LISTENER_NAME,		&MQCFT_STRING ],
    LocalName			=> [ &MQCACH_LOCAL_NAME,		&MQCFT_STRING ],
    NetBiosNames		=> [ &MQIACH_NAME_COUNT,		&MQCFT_INTEGER ],
    Port			=> [ &MQIACH_PORT,			&MQCFT_INTEGER ],
    Sessions			=> [ &MQIACH_SESSION_COUNT,		&MQCFT_INTEGER ],
    Socket			=> [ &MQIACH_SOCKET,			&MQCFT_INTEGER ],
    StartMode			=> [ &MQIACH_LISTENER_CONTROL,		&MQCFT_INTEGER, $ResponseValues{ListenerStartMode} ],
    TPName			=> [ &MQCACH_TP_NAME,			&MQCFT_STRING ],
    TransportType		=> [ &MQIACH_XMIT_PROTOCOL_TYPE,	&MQCFT_INTEGER, $ResponseValues{ListenerTransportType} ],
   },

   ListenerStatus =>
   {
    Adapter			=> [ &MQIACH_ADAPTER,			&MQCFT_INTEGER ],
    Backlog			=> [ &MQIACH_BACKLOG,			&MQCFT_INTEGER ],
    Commands			=> [ &MQIACH_COMMAND_COUNT,		&MQCFT_INTEGER ],
    IPAddress			=> [ &MQCACH_IP_ADDRESS,		&MQCFT_STRING ],
    ListenerDesc		=> [ &MQCACH_LISTENER_DESC,		&MQCFT_STRING ],
    ListenerName		=> [ &MQCACH_LISTENER_NAME,		&MQCFT_STRING ],
    LocalName			=> [ &MQCACH_LOCAL_NAME,		&MQCFT_STRING ],
    NetBiosNames		=> [ &MQIACH_NAME_COUNT,		&MQCFT_INTEGER ],
    Port			=> [ &MQIACH_PORT,			&MQCFT_INTEGER ],
    ProcessId			=> [ &MQIACF_PROCESS_ID,		&MQCFT_INTEGER ],
    Sessions			=> [ &MQIACH_SESSION_COUNT,		&MQCFT_INTEGER ],
    Socket			=> [ &MQIACH_SOCKET,			&MQCFT_INTEGER ],
    StartDate			=> [ &MQCACH_LISTENER_START_DATE,	&MQCFT_STRING ],
    StartMode			=> [ &MQIACH_LISTENER_CONTROL,		&MQCFT_INTEGER, $ResponseValues{ListenerStartMode} ],
    StartTime			=> [ &MQCACH_LISTENER_START_TIME,	&MQCFT_STRING ],
    Status			=> [ &MQIACH_LISTENER_STATUS,		&MQCFT_INTEGER, $ResponseValues{ListenerStatus} ],
    TPName			=> [ &MQCACH_TP_NAME,			&MQCFT_STRING ],
    TransportType		=> [ &MQIACH_XMIT_PROTOCOL_TYPE,	&MQCFT_INTEGER, $ResponseValues{ListenerTransportType} ],
   },

   #
   # Service Status (installable service for distributed MQ v6)
   #
   ServiceStatus =>
   {
    ProcessId			=> [ &MQIACF_PROCESS_ID,		&MQCFT_INTEGER ],
    ServiceDesc			=> [ &MQCA_SERVICE_DESC,		&MQCFT_STRING ],
    ServiceName			=> [ &MQCA_SERVICE_NAME,		&MQCFT_STRING ],
    ServiceType			=> [ &MQIA_SERVICE_TYPE,		&MQCFT_INTEGER,		$ResponseValues{ServiceType} ],
    StartArguments		=> [ &MQCA_SERVICE_START_ARGS,		&MQCFT_STRING ],
    StartCommand		=> [ &MQCA_SERVICE_START_COMMAND,	&MQCFT_STRING ],
    StartDate			=> [ &MQCACF_SERVICE_START_DATE,	&MQCFT_STRING ],
    StartMode			=> [ &MQIA_SERVICE_CONTROL,		&MQCFT_INTEGER,		$ResponseValues{ServiceStartMode} ],
    StartTime			=> [ &MQCACF_SERVICE_START_TIME,	&MQCFT_STRING ],
    Status			=> [ &MQIACF_SERVICE_STATUS,		&MQCFT_INTEGER,		$ResponseValues{ServiceStatus} ],
    StopArguments		=> [ &MQCA_SERVICE_STOP_ARGS,		&MQCFT_STRING ],
    StopCommand			=> [ &MQCA_SERVICE_STOP_COMMAND,	&MQCFT_STRING ],
    StderrDestination		=> [ &MQCA_STDERR_DESTINATION,		&MQCFT_STRING ],
    StdoutDestination		=> [ &MQCA_STDOUT_DESTINATION,		&MQCFT_STRING ],
   },

   #
   # Subscription for MQ v7
   #
   Subscription =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    CreationDate		=> [ &MQCA_CREATION_DATE,		&MQCFT_STRING ],
    CreationTime		=> [ &MQCA_CREATION_TIME,		&MQCFT_STRING ],
    Destination			=> [ &MQCACF_DESTINATION,		&MQCFT_STRING ],
    DestinationClass		=> [ &MQIACF_DESTINATION_CLASS,		&MQCFT_INTEGER,		$ResponseValues{DestinationClass} ],
    DestinationCorrelId		=> [ &MQBACF_DESTINATION_CORREL_ID,	&MQCFT_BYTE_STRING ],
    DestinationQueueManager	=> [ &MQCACF_DESTINATION_Q_MGR,		&MQCFT_STRING ],
    Durable			=> [ &MQIACF_DURABLE_SUBSCRIPTION,	&MQCFT_INTEGER,		$ResponseValues{Durable} ],
    Expiry			=> [ &MQIACF_EXPIRY,			&MQCFT_INTEGER ],
    PublishPriority		=> [ &MQIACF_PUB_PRIORITY,		&MQCFT_INTEGER,		$ResponseValues{PublishPriority} ],
    PublishSubscribeProperties	=> [ &MQIACF_PUBSUB_PROPERTIES,		&MQCFT_INTEGER,		$ResponseValues{PubSubProperties} ],
    PublishedAccountingToken	=> [ &MQBACF_ACCOUNTING_TOKEN,		&MQCFT_BYTE_STRING ],
    PublishedApplicationIdentifier => [ &MQCACF_APPL_IDENTITY_DATA,	&MQCFT_STRING ],
    RequestOnly			=> [ &MQIACF_REQUEST_ONLY,		&MQCFT_INTEGER,		$ResponseValues{RequestOnly} ],
    Selector			=> [ &MQCACF_SUB_SELECTOR,		&MQCFT_STRING ],
    SelectorType		=> [ &MQIACF_SELECTOR_TYPE,		&MQCFT_INTEGER, 	$ResponseValues{SelectorType} ],
    SubId			=> [ &MQBACF_SUB_ID,			&MQCFT_BYTE_STRING ],
    SubName			=> [ &MQCACF_SUB_NAME,			&MQCFT_STRING ],
    SubscriptionLevel		=> [ &MQIACF_SUB_LEVEL,			&MQCFT_INTEGER ],
    SubscriptionScope		=> [ &MQIACF_SUBSCRIPTION_SCOPE,	&MQCFT_INTEGER,		$ResponseValues{SubscriptionScope} ],
    SubscriptionType		=> [ &MQIACF_SUB_TYPE,			&MQCFT_INTEGER,		$ResponseValues{SubscriptionType} ],
    SubscriptionUser		=> [ &MQCACF_SUB_USER_ID,		&MQCFT_STRING ],
    TopicName			=> [ &MQCA_TOPIC_NAME,			&MQCFT_STRING ],
    TopicObject			=> [ &MQCACF_TOPIC,			&MQCFT_STRING ],
    TopicString			=> [ &MQCA_TOPIC_STRING,		&MQCFT_STRING ],
    UserData			=> [ &MQCACF_SUB_USER_DATA,		&MQCFT_STRING ],
    VariableUser		=> [ &MQIACF_VARIABLE_USER_ID,		&MQCFT_INTEGER,		$ResponseValues{VariableUser} ],
    WildcardSchema		=> [ &MQIACF_WILDCARD_SCHEMA,		&MQCFT_INTEGER,		$ResponseValues{WildcardSchema} ],
   },

   #
   # Subscription Status for MQ v7
   #
# LastPublishDate/Time seems to be related to topic.
   SubscriptionStatus =>
   {
    ActiveConnection		=> [ &MQBACF_CONNECTION_ID,		&MQCFT_BYTE_STRING ],
    Durable			=> [ &MQIACF_DURABLE_SUBSCRIPTION,	&MQCFT_INTEGER,		$ResponseValues{Durable} ],
    LastMessageDate		=> [ &MQCACF_LAST_MSG_DATE,		&MQCFT_STRING ],
    LastMessageTime		=> [ &MQCACF_LAST_MSG_TIME,		&MQCFT_STRING ],
#    LastPublishDate		=> [ &MQCACF_LAST_PUB_DATE,		&MQCFT_STRING ],
#    LastPublishTime		=> [ &MQCACF_LAST_PUB_TIME,		&MQCFT_STRING ],
    NumberOfMessages		=> [ &MQIACF_MESSAGE_COUNT,		&MQCFT_INTEGER ],
    ResumeDate			=> [ &MQCA_RESUME_DATE,			&MQCFT_STRING ],
    ResumeTime			=> [ &MQCA_RESUME_TIME,			&MQCFT_STRING ],
    SubId			=> [ &MQBACF_SUB_ID,			&MQCFT_BYTE_STRING ],
    SubName			=> [ &MQCACF_SUB_NAME,			&MQCFT_STRING ],
    SubscriptionUser		=> [ &MQCACF_SUB_USER_ID,		&MQCFT_STRING ],
    SubType			=> [ &MQIACF_SUB_TYPE,			&MQCFT_INTEGER,		$ResponseValues{SubscriptionType} ],
   },

   #
   # PubSubStatus
   #
   PubSubStatus =>
   {
    QueueManagerName		=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    Type			=> [ &MQIACF_PS_STATUS_TYPE,		&MQCFT_INTEGER,		$ResponseValues{PubSubStatusType} ],
    Status			=> [ &MQIACF_PUBSUB_STATUS,		&MQCFT_INTEGER,		$ResponseValues{PubSubStatus} ],
   },
   #
   # Pub/Sub Topic for MQ v7
   #
   Topic =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_STRING ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_STRING ],
    ClusterName			=> [ &MQCA_CLUSTER_NAME,		&MQCFT_STRING ],
    ComminfoName		=> [ &MQCA_COMM_INFO_NAME,		&MQCFT_STRING ],
    Custom			=> [ &MQCA_CUSTOM,			&MQCFT_INTEGER ],
    DefPersistence		=> [ &MQIA_TOPIC_DEF_PERSISTENCE,	&MQCFT_INTEGER,		$ResponseValues{TopicDefPersistence} ],
    DefPriority			=> [ &MQIA_DEF_PRIORITY,		&MQCFT_INTEGER ],
    DefPutResponse		=> [ &MQIA_DEF_PUT_RESPONSE_TYPE,	&MQCFT_INTEGER,		$ResponseValues{DefPutResponse} ],
    DurableModelQName		=> [ &MQCA_MODEL_DURABLE_Q,		&MQCFT_STRING ],
    DurableSubscriptions	=> [ &MQIA_DURABLE_SUB,			&MQCFT_INTEGER,		$ResponseValues{TopicDurableSubscriptions} ],
    InhibitPublications		=> [ &MQIA_INHIBIT_PUB,			&MQCFT_INTEGER,		$ResponseValues{InhibitPublications} ],
    InhibitSubscriptions	=> [ &MQIA_INHIBIT_SUB,			&MQCFT_INTEGER,		$ResponseValues{InhibitSubscriptions} ],
    NonDurableModelQName	=> [ &MQCA_MODEL_NON_DURABLE_Q,		&MQCFT_STRING ],
    NonPersistentMsgDelivery	=> [ &MQIA_NPM_DELIVERY,		&MQCFT_INTEGER,		$ResponseValues{MsgDelivery} ],
    PersistentMsgDelivery	=> [ &MQIA_PM_DELIVERY,			&MQCFT_INTEGER,		$ResponseValues{MsgDelivery} ],
    ProxySubscriptions		=> [ &MQIA_PROXY_SUB,			&MQCFT_INTEGER,		$ResponseValues{ProxySubscriptions} ],
    PublicationScope		=> [ &MQIA_PUB_SCOPE,			&MQCFT_INTEGER,		$ResponseValues{PubSubScope} ],
    QMgrName			=> [ &MQCA_Q_MGR_NAME,			&MQCFT_STRING ],
    QSGDisposition		=> [ &MQIA_QSG_DISP,			&MQCFT_INTEGER,		$ResponseValues{QSGDisposition} ],
    SubscriptionScope		=> [ &MQIA_SUB_SCOPE,			&MQCFT_INTEGER,		$ResponseValues{PubSubScope} ],
    TopicDesc			=> [ &MQCA_TOPIC_DESC,			&MQCFT_STRING ],
    TopicName			=> [ &MQCA_TOPIC_NAME,			&MQCFT_STRING ],
    TopicNames			=> [ &MQCACF_TOPIC_NAMES,		&MQCFT_STRING_LIST ],
    TopicString			=> [ &MQCA_TOPIC_STRING,		&MQCFT_STRING ],
    TopicType			=> [ &MQIA_TOPIC_TYPE,			&MQCFT_INTEGER,			$ResponseValues{TopicType}],
    UseDLQ			=> [ &MQIA_USE_DEAD_LETTER_Q,		&MQCFT_INTEGER, 	$ResponseValues{TopicUseDLQ} ],
    WildcardOperation		=> [ &MQIA_WILDCARD_OPERATION,		&MQCFT_INTEGER,		$ResponseValues{WildcardOperation} ],
   },

   #
   # Pub/Sub Topic Status for MQ v7
   #
   TopicStatus =>
   {
    ActiveConnection		=> [ &MQBACF_CONNECTION_ID,		&MQCFT_BYTE_STRING ],
    AdminTopicName		=> [ &MQCA_ADMIN_TOPIC_NAME,		&MQCFT_STRING ],
    ClusterName			=> [ &MQCA_CLUSTER_NAME,		&MQCFT_STRING ],
    DefPriority			=> [ &MQIA_DEF_PRIORITY,		&MQCFT_INTEGER ],
    DefPersistence		=> [ &MQIA_TOPIC_DEF_PERSISTENCE,	&MQCFT_INTEGER,		$ResponseValues{TopicDefPersistence}  ],
    DefPutResponse		=> [ &MQIA_DEF_PUT_RESPONSE_TYPE,	&MQCFT_INTEGER,		$ResponseValues{DefPutResponse} ],
    DurableModelQName		=> [ &MQCA_MODEL_DURABLE_Q,		&MQCFT_STRING ],
    Durable			=> [ &MQIACF_DURABLE_SUBSCRIPTION,	&MQCFT_INTEGER,		$ResponseValues{Durable} ],
    DurableSubscriptions	=> [ &MQIA_DURABLE_SUB,			&MQCFT_INTEGER,		$ResponseValues{TopicStatusDurableSubscriptions} ],
    InhibitPublications		=> [ &MQIA_INHIBIT_PUB,			&MQCFT_INTEGER,		$ResponseValues{InhibitPublications} ],
    InhibitSubscriptions	=> [ &MQIA_INHIBIT_SUB,			&MQCFT_INTEGER,		$ResponseValues{InhibitSubscriptions} ],
    LastMessageDate		=> [ &MQCACF_LAST_MSG_DATE,		&MQCFT_STRING ],
    LastMessageTime		=> [ &MQCACF_LAST_MSG_TIME,		&MQCFT_STRING ],
    LastPublishDate		=> [ &MQCACF_LAST_PUB_DATE,		&MQCFT_STRING ],
    LastPublishTime		=> [ &MQCACF_LAST_PUB_TIME,		&MQCFT_STRING ],
    NonDurableModelQName	=> [ &MQCA_MODEL_NON_DURABLE_Q,		&MQCFT_STRING ],
    NonPersistentMsgDelivery	=> [ &MQIA_NPM_DELIVERY,		&MQCFT_INTEGER,		$ResponseValues{MsgDelivery} ],
    NumberOfMessages		=> [ &MQIACF_MESSAGE_COUNT,		&MQCFT_INTEGER ],
    NumberOfPublishes		=> [ &MQIA_PUB_COUNT,			&MQCFT_INTEGER ],
    PersistentMsgDelivery	=> [ &MQIA_PM_DELIVERY,			&MQCFT_INTEGER,		$ResponseValues{MsgDelivery} ],
    PublicationScope		=> [ &MQIA_PUB_SCOPE,			&MQCFT_INTEGER,		$ResponseValues{PubSubScope} ],
    PublishCount		=> [ &MQIA_PUB_COUNT,			&MQCFT_INTEGER ],
    ResumeDate			=> [ &MQCA_RESUME_DATE,			&MQCFT_STRING ],
    ResumeTime			=> [ &MQCA_RESUME_TIME,			&MQCFT_STRING ],
    RetainedPublication		=> [ &MQIACF_RETAINED_PUBLICATION,	&MQCFT_INTEGER,		$ResponseValues{RetainedPublication} ],
    SubscriptionCount		=> [ &MQIA_SUB_COUNT,			&MQCFT_INTEGER ],
    SubId			=> [ &MQBACF_SUB_ID,			&MQCFT_BYTE_STRING ],
    SubscriptionUserId		=> [ &MQCACF_SUB_USER_ID,		&MQCFT_STRING ],
    SubscriptionScope		=> [ &MQIA_SUB_SCOPE,			&MQCFT_INTEGER,		$ResponseValues{PubSubScope} ],
    SubscriptionType		=> [ &MQIACF_SUB_TYPE,			&MQCFT_INTEGER,		$ResponseValues{SubscriptionType} ],
    TopicString			=> [ &MQCA_TOPIC_STRING,		&MQCFT_STRING ],
    UseDLQ			=> [ &MQIA_USE_DEAD_LETTER_Q,		&MQCFT_INTEGER, 	$ResponseValues{TopicUseDLQ} ],
   },

   #
   # Comminfo in 7.1
   #
   Comminfo =>
   {
    AlterationDate		=> [ &MQCA_ALTERATION_DATE,		&MQCFT_INTEGER ],
    AlterationTime		=> [ &MQCA_ALTERATION_TIME,		&MQCFT_INTEGER ],
    ComminfoName                => [ &MQCA_COMM_INFO_NAME,              &MQCFT_STRING ],
    Bridge                      => [ &MQIA_MCAST_BRIDGE,                &MQCFT_INTEGER ],
    CodedCharSetId              => [ &MQIA_CODED_CHAR_SET_ID,           &MQCFT_INTEGER,		$ResponseValues{ComminfoCCSID} ],
    CommEvent                   => [ &MQIA_COMM_EVENT,                  &MQCFT_INTEGER,         $ResponseValues{CommEvent} ],
    ComminfoDesc                => [ &MQCA_COMM_INFO_DESC,              &MQCFT_STRING ],
    Encoding                    => [ &MQIACF_ENCODING,                  &MQCFT_INTEGER,         $ResponseValues{Encoding} ],
    GrpAddress                  => [ &MQCACH_GROUP_ADDRESS,             &MQCFT_STRING ],
    MonitorInterval             => [ &MQIA_MONITOR_INTERVAL,            &MQCFT_INTEGER ],
    MsgHistory                  => [ &MQIACH_MSG_HISTORY,               &MQCFT_INTEGER ],
    MulticastHeartbeat          => [ &MQIACH_MC_HB_INTERVAL,            &MQCFT_INTEGER ],
    MulticastPropControl        => [ &MQIACH_MULTICAST_PROPERTIES,      &MQCFT_INTEGER,         $ResponseValues{MulticastPropControl} ],
    NewSubHistory               => [ &MQIACH_NEW_SUBSCRIBER_HISTORY,    &MQCFT_INTEGER,         $ResponseValues{NewSubHistory}
 ],
    PortNumber                  => [ &MQIACH_PORT,                      &MQCFT_INTEGER ],
    ComminfoType                => [ &MQIA_COMM_INFO_TYPE,              &MQCFT_INTEGER,         $ResponseValues{ComminfoType}
],
   },

   #
   # InquireLog for z/OS
   #
   Log =>
   {
    DeallocateInterval		=> [ &MQIACF_SYSP_DEALLOC_INTERVAL,	&MQCFT_INTEGER ],
    DualActive			=> [ &MQIACF_SYSP_DUAL_ACTIVE,		&MQCFT_INTEGER ],
    DualArchive			=> [ &MQIACF_SYSP_DUAL_ARCHIVE,		&MQCFT_INTEGER ],
    DualBSDS			=> [ &MQIACF_SYSP_DUAL_BSDS,		&MQCFT_INTEGER ],
    InputBufferSize		=> [ &MQIACF_SYSP_IN_BUFFER_SIZE,	&MQCFT_INTEGER ],
    LogArchive			=> [ &MQIACF_SYSP_ARCHIVE,		&MQCFT_INTEGER ],
    LogCompression		=> [ &MQIACF_LOG_COMPRESSION,		&MQCFT_INTEGER, 	$ResponseValues{LogCompression} ],
    MaxArchiveLog		=> [ &MQIACF_SYSP_MAX_ARCHIVE,		&MQCFT_INTEGER ],
    MaxReadTapeUnits		=> [ &MQIACF_SYSP_MAX_READ_TAPES,	&MQCFT_INTEGER ],
    OutputBufferCount		=> [ &MQIACF_SYSP_OUT_BUFFER_COUNT,	&MQCFT_INTEGER ],
    OutputBufferSize		=> [ &MQIACF_SYSP_OUT_BUFFER_SIZE,	&MQCFT_INTEGER ],

    DataSetName			=> [ &MQCACF_DATA_SET_NAME,		&MQCFT_STRING ],
    FullLogs			=> [ &MQIACF_SYSP_FULL_LOGS,		&MQCFT_INTEGER ],
    LogCopyNumber		=> [ &MQIACF_SYSP_LOG_COPY,		&MQCFT_INTEGER ],
    LogRBA			=> [ &MQCACF_SYSP_LOG_RBA,		&MQCFT_STRING ],
    LogSuspend			=> [ &MQIACF_SYSP_LOG_SUSPEND,		&MQCFT_INTEGER ],
    LogUsed			=> [ &MQIACF_SYSP_LOG_USED,		&MQCFT_INTEGER ],
    OffLoadStatus		=> [ &MQIACF_SYSP_OFFLOAD_STATUS,	&MQCFT_INTEGER,		$ResponseValues{OffLoadStatus} ],
    QMgrStartDate		=> [ &MQCACF_SYSP_Q_MGR_DATE,		&MQCFT_STRING ],
    QMgrStartRBA		=> [ &MQCACF_SYSP_Q_MGR_RBA,		&MQCFT_STRING ],
    QMgrStartTime		=> [ &MQCACF_SYSP_Q_MGR_TIME,		&MQCFT_STRING ],
    TotalLogs			=> [ &MQIACF_SYSP_TOTAL_LOGS,		&MQCFT_INTEGER ],
   },

   #
   # Authority is a Morgan Stanley extension
   #
   MorganAuthority =>
   {
    ObjectType			=> [ &MQIAE_OBJECT_TYPE,		&MQCFT_INTEGER,		$ResponseValues{ObjectType} ],
    ObjectName			=> [ &MQCAE_OBJECT_NAME,		&MQCFT_STRING ],

    EntityType			=> [ &MQIAE_ENTITY_TYPE,		&MQCFT_INTEGER,		$ResponseValues{MorganEntityType} ],
    EntityName			=> [ &MQCAE_ENTITY_NAME,		&MQCFT_STRING ],

    ExpiresAt                   => [ &MQIA64E_EXPIRES_AT,               &MQCFT_INTEGER64 ],
    ExpiresAfter                => [ &MQIAE_EXPIRES_AFTER,              &MQCFT_INTEGER ],

    Connect			=> [ &MQIAE_AUTH_CONNECT,		&MQCFT_INTEGER ],
    Browse			=> [ &MQIAE_AUTH_BROWSE,		&MQCFT_INTEGER ],
    Input			=> [ &MQIAE_AUTH_INPUT,			&MQCFT_INTEGER ],
    Output			=> [ &MQIAE_AUTH_OUTPUT,		&MQCFT_INTEGER ],
    Inquire			=> [ &MQIAE_AUTH_INQUIRE,		&MQCFT_INTEGER ],
    Set				=> [ &MQIAE_AUTH_SET,			&MQCFT_INTEGER ],
    PassId			=> [ &MQIAE_AUTH_PASSID,		&MQCFT_INTEGER ],
    PassAll			=> [ &MQIAE_AUTH_PASSALL,		&MQCFT_INTEGER ],
    SetId			=> [ &MQIAE_AUTH_SETID,			&MQCFT_INTEGER ],
    SetAll			=> [ &MQIAE_AUTH_SETALL,		&MQCFT_INTEGER ],
    AlternateUser		=> [ &MQIAE_AUTH_ALTERNATEUSER,		&MQCFT_INTEGER ],
    Create			=> [ &MQIAE_AUTH_CREATE,		&MQCFT_INTEGER ],
    Delete			=> [ &MQIAE_AUTH_DELETE,		&MQCFT_INTEGER ],
    Display			=> [ &MQIAE_AUTH_DISPLAY,		&MQCFT_INTEGER ],
    Change			=> [ &MQIAE_AUTH_CHANGE,		&MQCFT_INTEGER ],

    Create			=> [ &MQIAE_AUTH_CREATE,		&MQCFT_INTEGER ],

    Clear			=> [ &MQIAE_AUTH_CLEAR,			&MQCFT_INTEGER ],
    Authorize			=> [ &MQIAE_AUTH_AUTHORIZE,		&MQCFT_INTEGER ],
    StartStop			=> [ &MQIAE_AUTH_START_STOP,		&MQCFT_INTEGER ],
    DisplayStatus		=> [ &MQIAE_AUTH_DISPLAY_STATUS,	&MQCFT_INTEGER ],
    ResolveReset		=> [ &MQIAE_AUTH_RESOLVE_RESET,		&MQCFT_INTEGER ],
    Ping			=> [ &MQIAE_AUTH_PING,			&MQCFT_INTEGER ],

    AllAdmin			=> [ &MQIAE_AUTH_ALLADMIN,		&MQCFT_INTEGER ],
    AllMQI			=> [ &MQIAE_AUTH_ALLMQI,		&MQCFT_INTEGER ],
    All				=> [ &MQIAE_AUTH_ALL,			&MQCFT_INTEGER ],
   },

  );

1;
